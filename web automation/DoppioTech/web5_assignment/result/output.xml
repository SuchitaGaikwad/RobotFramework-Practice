<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 5.0.1 (Python 3.10.4 on win32)" generated="20220630 11:19:14.797" rpa="false" schemaversion="3">
<suite id="s1" name="Shoppee" source="D:\Assignment\web5_assignment\testcases\shoppee.robot">
<test id="s1-t1" name="TC001- Test shopee website at home page, computer products page and search company names page" line="17">
<kw name="Open browser and maximize" library="common" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20220630 11:19:15.312" level="INFO">Opening browser 'Chrome' to base url 'https://shopee.co.th/'.</msg>
<status status="PASS" starttime="20220630 11:19:15.311" endtime="20220630 11:19:20.617"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20220630 11:19:20.618" endtime="20220630 11:19:21.461"/>
</kw>
<status status="PASS" starttime="20220630 11:19:15.311" endtime="20220630 11:19:21.461"/>
</kw>
<kw name="Verify list of products has all categories and click at &quot;Computers &amp; Laptops&quot;" library="home_feature">
<kw name="Choose language on popup" library="home">
<arg>English</arg>
<kw name="Replace String" library="String">
<var>${language_popup_locator}</var>
<arg>${language_popup_locator}</arg>
<arg>language</arg>
<arg>${language}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:21.465" level="INFO">${language_popup_locator} = xpath=//button[contains(text(),'English')]</msg>
<status status="PASS" starttime="20220630 11:19:21.464" endtime="20220630 11:19:21.465"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${language_popup_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:21.465" endtime="20220630 11:19:21.919"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${language_popup_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:21.920" level="INFO">Clicking element 'xpath=//button[contains(text(),'English')]'.</msg>
<status status="PASS" starttime="20220630 11:19:21.919" endtime="20220630 11:19:25.304"/>
</kw>
<status status="PASS" starttime="20220630 11:19:21.463" endtime="20220630 11:19:25.304"/>
</kw>
<kw name="Close advertise popup" library="home">
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<arg>${advertise_popup}</arg>
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<status status="PASS" starttime="20220630 11:19:25.306" endtime="20220630 11:19:25.357"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>${advertise_popup}</arg>
<arg>ESCAPE</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20220630 11:19:25.358" level="INFO">Sending key(s) ('ESCAPE',) to xpath=//shopee-banner-popup-stateful element.</msg>
<msg timestamp="20220630 11:19:26.514" level="INFO">Pressing special key ESCAPE to element.</msg>
<msg timestamp="20220630 11:19:26.514" level="INFO">Releasing special key ESCAPE.</msg>
<status status="PASS" starttime="20220630 11:19:25.357" endtime="20220630 11:19:26.641"/>
</kw>
<status status="PASS" starttime="20220630 11:19:25.305" endtime="20220630 11:19:26.641"/>
</kw>
<kw name="Verify home page has all categories" library="home">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${categories_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:26.642" endtime="20220630 11:19:26.915"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${categories_locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20220630 11:19:26.915" endtime="20220630 11:19:27.337"/>
</kw>
<kw name="Get list from file" library="common">
<var>@{categories_list}</var>
<arg>${data_path}</arg>
<arg>categories</arg>
<kw name="Read data from file" library="common">
<var>${data}</var>
<arg>${path}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>OperatingSystem.File should exist</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220630 11:19:27.341" level="INFO" html="true">File '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220630 11:19:27.340" endtime="20220630 11:19:27.341"/>
</kw>
<msg timestamp="20220630 11:19:27.342" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20220630 11:19:27.340" endtime="20220630 11:19:27.342"/>
</kw>
<if>
<branch type="IF" condition="'${status}'=='True'">
<kw name="Get File" library="OperatingSystem">
<var>${data_file}</var>
<arg>${path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 11:19:27.344" level="INFO" html="true">Getting file '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;'.</msg>
<msg timestamp="20220630 11:19:27.344" level="INFO">${data_file} = categories:
  - Men Clothes
  - Mobile &amp; Gadgets
  - Health &amp; Wellness
  - Watches &amp; Glasses
  - Men Shoes
  - Computers &amp; Laptops
  - Cameras
  - Sports &amp; Outdoors
  - Home Entertainment 
  - Gaming ...</msg>
<status status="PASS" starttime="20220630 11:19:27.343" endtime="20220630 11:19:27.345"/>
</kw>
<kw name="Safe Load" library="yaml">
<var>${data}</var>
<arg>${data_file}</arg>
<doc>Parse the first YAML document in a stream
and produce the corresponding Python object.</doc>
<msg timestamp="20220630 11:19:27.355" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:27.345" endtime="20220630 11:19:27.355"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.343" endtime="20220630 11:19:27.356"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Not found file at ${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220630 11:19:27.356" endtime="20220630 11:19:27.356"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:27.356" endtime="20220630 11:19:27.356"/>
</branch>
<status status="PASS" starttime="20220630 11:19:27.342" endtime="20220630 11:19:27.356"/>
</if>
<msg timestamp="20220630 11:19:27.356" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:27.339" endtime="20220630 11:19:27.356"/>
</kw>
<kw name="Copy List" library="Collections">
<var>@{list}</var>
<arg>${data}[${keyword}]</arg>
<doc>Returns a copy of the given list.</doc>
<msg timestamp="20220630 11:19:27.358" level="INFO">@{list} = [ Men Clothes | Mobile &amp; Gadgets | Health &amp; Wellness | Watches &amp; Glasses | Men Shoes | Computers &amp; Laptops | Cameras | Sports &amp; Outdoors | Home Entertainment | Gaming &amp; Hobbies | Women Clothes | Beaut...</msg>
<status status="PASS" starttime="20220630 11:19:27.357" endtime="20220630 11:19:27.358"/>
</kw>
<msg timestamp="20220630 11:19:27.358" level="INFO">@{categories_list} = [ Men Clothes | Mobile &amp; Gadgets | Health &amp; Wellness | Watches &amp; Glasses | Men Shoes | Computers &amp; Laptops | Cameras | Sports &amp; Outdoors | Home Entertainment | Gaming &amp; Hobbies | Women Clothes | Beaut...</msg>
<status status="PASS" starttime="20220630 11:19:27.338" endtime="20220630 11:19:27.359"/>
</kw>
<for flavor="IN">
<var>${item}</var>
<value>@{categories_list}</value>
<iter>
<var name="${item}">Men Clothes</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.414" level="INFO">Current page contains text 'Men Clothes'.</msg>
<status status="PASS" starttime="20220630 11:19:27.360" endtime="20220630 11:19:27.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.415" level="INFO">Men Clothes</msg>
<status status="PASS" starttime="20220630 11:19:27.415" endtime="20220630 11:19:27.416"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.359" endtime="20220630 11:19:27.416"/>
</iter>
<iter>
<var name="${item}">Mobile &amp; Gadgets</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.502" level="INFO">Current page contains text 'Mobile &amp; Gadgets'.</msg>
<status status="PASS" starttime="20220630 11:19:27.416" endtime="20220630 11:19:27.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.503" level="INFO">Mobile &amp; Gadgets</msg>
<status status="PASS" starttime="20220630 11:19:27.502" endtime="20220630 11:19:27.503"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.416" endtime="20220630 11:19:27.503"/>
</iter>
<iter>
<var name="${item}">Health &amp; Wellness</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.564" level="INFO">Current page contains text 'Health &amp; Wellness'.</msg>
<status status="PASS" starttime="20220630 11:19:27.504" endtime="20220630 11:19:27.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.566" level="INFO">Health &amp; Wellness</msg>
<status status="PASS" starttime="20220630 11:19:27.565" endtime="20220630 11:19:27.566"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.503" endtime="20220630 11:19:27.566"/>
</iter>
<iter>
<var name="${item}">Watches &amp; Glasses</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.618" level="INFO">Current page contains text 'Watches &amp; Glasses'.</msg>
<status status="PASS" starttime="20220630 11:19:27.566" endtime="20220630 11:19:27.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.619" level="INFO">Watches &amp; Glasses</msg>
<status status="PASS" starttime="20220630 11:19:27.618" endtime="20220630 11:19:27.619"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.566" endtime="20220630 11:19:27.619"/>
</iter>
<iter>
<var name="${item}">Men Shoes</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.665" level="INFO">Current page contains text 'Men Shoes'.</msg>
<status status="PASS" starttime="20220630 11:19:27.619" endtime="20220630 11:19:27.665"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.666" level="INFO">Men Shoes</msg>
<status status="PASS" starttime="20220630 11:19:27.665" endtime="20220630 11:19:27.666"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.619" endtime="20220630 11:19:27.666"/>
</iter>
<iter>
<var name="${item}">Computers &amp; Laptops</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.705" level="INFO">Current page contains text 'Computers &amp; Laptops'.</msg>
<status status="PASS" starttime="20220630 11:19:27.667" endtime="20220630 11:19:27.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.706" level="INFO">Computers &amp; Laptops</msg>
<status status="PASS" starttime="20220630 11:19:27.705" endtime="20220630 11:19:27.706"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.666" endtime="20220630 11:19:27.706"/>
</iter>
<iter>
<var name="${item}">Cameras</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.747" level="INFO">Current page contains text 'Cameras'.</msg>
<status status="PASS" starttime="20220630 11:19:27.706" endtime="20220630 11:19:27.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.748" level="INFO">Cameras</msg>
<status status="PASS" starttime="20220630 11:19:27.748" endtime="20220630 11:19:27.749"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.706" endtime="20220630 11:19:27.749"/>
</iter>
<iter>
<var name="${item}">Sports &amp; Outdoors</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.792" level="INFO">Current page contains text 'Sports &amp; Outdoors'.</msg>
<status status="PASS" starttime="20220630 11:19:27.749" endtime="20220630 11:19:27.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.793" level="INFO">Sports &amp; Outdoors</msg>
<status status="PASS" starttime="20220630 11:19:27.793" endtime="20220630 11:19:27.793"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.749" endtime="20220630 11:19:27.793"/>
</iter>
<iter>
<var name="${item}">Home Entertainment</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.833" level="INFO">Current page contains text 'Home Entertainment'.</msg>
<status status="PASS" starttime="20220630 11:19:27.794" endtime="20220630 11:19:27.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.834" level="INFO">Home Entertainment</msg>
<status status="PASS" starttime="20220630 11:19:27.833" endtime="20220630 11:19:27.834"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.794" endtime="20220630 11:19:27.834"/>
</iter>
<iter>
<var name="${item}">Gaming &amp; Hobbies</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.874" level="INFO">Current page contains text 'Gaming &amp; Hobbies'.</msg>
<status status="PASS" starttime="20220630 11:19:27.835" endtime="20220630 11:19:27.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.874" level="INFO">Gaming &amp; Hobbies</msg>
<status status="PASS" starttime="20220630 11:19:27.874" endtime="20220630 11:19:27.875"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.834" endtime="20220630 11:19:27.875"/>
</iter>
<iter>
<var name="${item}">Women Clothes</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.912" level="INFO">Current page contains text 'Women Clothes'.</msg>
<status status="PASS" starttime="20220630 11:19:27.875" endtime="20220630 11:19:27.912"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.913" level="INFO">Women Clothes</msg>
<status status="PASS" starttime="20220630 11:19:27.913" endtime="20220630 11:19:27.914"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.875" endtime="20220630 11:19:27.914"/>
</iter>
<iter>
<var name="${item}">Beauty &amp; Personal Care</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.947" level="INFO">Current page contains text 'Beauty &amp; Personal Care'.</msg>
<status status="PASS" starttime="20220630 11:19:27.914" endtime="20220630 11:19:27.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.948" level="INFO">Beauty &amp; Personal Care</msg>
<status status="PASS" starttime="20220630 11:19:27.947" endtime="20220630 11:19:27.948"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.914" endtime="20220630 11:19:27.948"/>
</iter>
<iter>
<var name="${item}">Baby &amp; Toys</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:27.986" level="INFO">Current page contains text 'Baby &amp; Toys'.</msg>
<status status="PASS" starttime="20220630 11:19:27.949" endtime="20220630 11:19:27.987"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:27.987" level="INFO">Baby &amp; Toys</msg>
<status status="PASS" starttime="20220630 11:19:27.987" endtime="20220630 11:19:27.988"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.948" endtime="20220630 11:19:27.988"/>
</iter>
<iter>
<var name="${item}">Home &amp; Living</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:28.028" level="INFO">Current page contains text 'Home &amp; Living'.</msg>
<status status="PASS" starttime="20220630 11:19:27.988" endtime="20220630 11:19:28.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:28.029" level="INFO">Home &amp; Living</msg>
<status status="PASS" starttime="20220630 11:19:28.029" endtime="20220630 11:19:28.029"/>
</kw>
<status status="PASS" starttime="20220630 11:19:27.988" endtime="20220630 11:19:28.030"/>
</iter>
<iter>
<var name="${item}">Bags</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:28.067" level="INFO">Current page contains text 'Bags'.</msg>
<status status="PASS" starttime="20220630 11:19:28.030" endtime="20220630 11:19:28.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:28.068" level="INFO">Bags</msg>
<status status="PASS" starttime="20220630 11:19:28.068" endtime="20220630 11:19:28.068"/>
</kw>
<status status="PASS" starttime="20220630 11:19:28.030" endtime="20220630 11:19:28.068"/>
</iter>
<iter>
<var name="${item}">Women Shoes</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:28.112" level="INFO">Current page contains text 'Women Shoes'.</msg>
<status status="PASS" starttime="20220630 11:19:28.069" endtime="20220630 11:19:28.112"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:28.113" level="INFO">Women Shoes</msg>
<status status="PASS" starttime="20220630 11:19:28.113" endtime="20220630 11:19:28.113"/>
</kw>
<status status="PASS" starttime="20220630 11:19:28.068" endtime="20220630 11:19:28.114"/>
</iter>
<iter>
<var name="${item}">Fashion Accessories</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:28.146" level="INFO">Current page contains text 'Fashion Accessories'.</msg>
<status status="PASS" starttime="20220630 11:19:28.114" endtime="20220630 11:19:28.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:28.148" level="INFO">Fashion Accessories</msg>
<status status="PASS" starttime="20220630 11:19:28.147" endtime="20220630 11:19:28.148"/>
</kw>
<status status="PASS" starttime="20220630 11:19:28.114" endtime="20220630 11:19:28.148"/>
</iter>
<iter>
<var name="${item}">Food &amp; Beverages</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:28.180" level="INFO">Current page contains text 'Food &amp; Beverages'.</msg>
<status status="PASS" starttime="20220630 11:19:28.148" endtime="20220630 11:19:28.180"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:28.181" level="INFO">Food &amp; Beverages</msg>
<status status="PASS" starttime="20220630 11:19:28.181" endtime="20220630 11:19:28.181"/>
</kw>
<status status="PASS" starttime="20220630 11:19:28.148" endtime="20220630 11:19:28.181"/>
</iter>
<iter>
<var name="${item}">Home Appliances</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:28.215" level="INFO">Current page contains text 'Home Appliances'.</msg>
<status status="PASS" starttime="20220630 11:19:28.182" endtime="20220630 11:19:28.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:28.216" level="INFO">Home Appliances</msg>
<status status="PASS" starttime="20220630 11:19:28.216" endtime="20220630 11:19:28.216"/>
</kw>
<status status="PASS" starttime="20220630 11:19:28.181" endtime="20220630 11:19:28.216"/>
</iter>
<iter>
<var name="${item}">Pets</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${item}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:28.250" level="INFO">Current page contains text 'Pets'.</msg>
<status status="PASS" starttime="20220630 11:19:28.217" endtime="20220630 11:19:28.251"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220630 11:19:28.251" level="INFO">Pets</msg>
<status status="PASS" starttime="20220630 11:19:28.251" endtime="20220630 11:19:28.252"/>
</kw>
<status status="PASS" starttime="20220630 11:19:28.217" endtime="20220630 11:19:28.252"/>
</iter>
<status status="PASS" starttime="20220630 11:19:27.359" endtime="20220630 11:19:28.252"/>
</for>
<status status="PASS" starttime="20220630 11:19:26.641" endtime="20220630 11:19:28.252"/>
</kw>
<kw name="Choose category" library="home">
<arg>Computers</arg>
<kw name="Replace String" library="String">
<var>${topic_locator}</var>
<arg>${topic_locator}</arg>
<arg>topic</arg>
<arg>${topic}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:28.254" level="INFO">${topic_locator} = xpath=//a[@class='home-category-list__category-grid' and contains(@href,'/Computers')]</msg>
<status status="PASS" starttime="20220630 11:19:28.253" endtime="20220630 11:19:28.254"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${categories_locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20220630 11:19:28.254" endtime="20220630 11:19:28.552"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${topic_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:28.552" level="INFO">Clicking element 'xpath=//a[@class='home-category-list__category-grid' and contains(@href,'/Computers')]'.</msg>
<status status="PASS" starttime="20220630 11:19:28.552" endtime="20220630 11:19:28.779"/>
</kw>
<status status="PASS" starttime="20220630 11:19:28.252" endtime="20220630 11:19:28.780"/>
</kw>
<status status="PASS" starttime="20220630 11:19:21.462" endtime="20220630 11:19:28.780"/>
</kw>
<kw name="Verify list of seller name has all companies and click at IT CITY" library="computer_products_feature">
<kw name="Verify computer page has all categories" library="computer">
<kw name="Read data from file" library="common">
<var>${data}</var>
<arg>${data_path}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>OperatingSystem.File should exist</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220630 11:19:28.785" level="INFO" html="true">File '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220630 11:19:28.785" endtime="20220630 11:19:28.785"/>
</kw>
<msg timestamp="20220630 11:19:28.786" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20220630 11:19:28.784" endtime="20220630 11:19:28.786"/>
</kw>
<if>
<branch type="IF" condition="'${status}'=='True'">
<kw name="Get File" library="OperatingSystem">
<var>${data_file}</var>
<arg>${path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 11:19:28.787" level="INFO" html="true">Getting file '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;'.</msg>
<msg timestamp="20220630 11:19:28.788" level="INFO">${data_file} = categories:
  - Men Clothes
  - Mobile &amp; Gadgets
  - Health &amp; Wellness
  - Watches &amp; Glasses
  - Men Shoes
  - Computers &amp; Laptops
  - Cameras
  - Sports &amp; Outdoors
  - Home Entertainment 
  - Gaming ...</msg>
<status status="PASS" starttime="20220630 11:19:28.786" endtime="20220630 11:19:28.788"/>
</kw>
<kw name="Safe Load" library="yaml">
<var>${data}</var>
<arg>${data_file}</arg>
<doc>Parse the first YAML document in a stream
and produce the corresponding Python object.</doc>
<msg timestamp="20220630 11:19:28.799" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:28.788" endtime="20220630 11:19:28.800"/>
</kw>
<status status="PASS" starttime="20220630 11:19:28.786" endtime="20220630 11:19:28.800"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Not found file at ${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220630 11:19:28.800" endtime="20220630 11:19:28.800"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:28.800" endtime="20220630 11:19:28.800"/>
</branch>
<status status="PASS" starttime="20220630 11:19:28.786" endtime="20220630 11:19:28.800"/>
</if>
<msg timestamp="20220630 11:19:28.801" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:28.783" endtime="20220630 11:19:28.801"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${see_all_locator}</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:28.802" endtime="20220630 11:19:29.373"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${see_all_locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20220630 11:19:29.373" endtime="20220630 11:19:29.665"/>
</kw>
<kw name="Convert To List" library="Collections">
<var>${brand_name_list}</var>
<arg>${data}[Computer_categories]</arg>
<doc>Converts the given ``item`` to a Python ``list`` type.</doc>
<msg timestamp="20220630 11:19:29.666" level="INFO">${brand_name_list} = ['itcity', 'microsoft', 'seagate', 'advice', 'asus', 'razer', 'hp', 'steelseries', 'logi', 'lenovo', 'huawei', 'tplink']</msg>
<status status="PASS" starttime="20220630 11:19:29.665" endtime="20220630 11:19:29.666"/>
</kw>
<for flavor="IN">
<var>${brand_name}</var>
<value>@{brand_name_list}</value>
<iter>
<var name="${brand_name}">itcity</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:29.668" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'itcity')]</msg>
<status status="PASS" starttime="20220630 11:19:29.667" endtime="20220630 11:19:29.668"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:29.688" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'itcity')]'.</msg>
<status status="PASS" starttime="20220630 11:19:29.669" endtime="20220630 11:19:29.688"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:29.780" level="INFO">${url} = https://shopee.co.th/itcity</msg>
<status status="PASS" starttime="20220630 11:19:29.688" endtime="20220630 11:19:29.780"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:29.781" endtime="20220630 11:19:29.782"/>
</kw>
<status status="PASS" starttime="20220630 11:19:29.667" endtime="20220630 11:19:29.782"/>
</iter>
<iter>
<var name="${brand_name}">microsoft</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:29.784" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'microsoft')]</msg>
<status status="PASS" starttime="20220630 11:19:29.783" endtime="20220630 11:19:29.784"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:29.812" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'microsoft')]'.</msg>
<status status="PASS" starttime="20220630 11:19:29.784" endtime="20220630 11:19:29.812"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:29.839" level="INFO">${url} = https://shopee.co.th/microsoftofficial</msg>
<status status="PASS" starttime="20220630 11:19:29.813" endtime="20220630 11:19:29.839"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:29.840" endtime="20220630 11:19:29.840"/>
</kw>
<status status="PASS" starttime="20220630 11:19:29.782" endtime="20220630 11:19:29.840"/>
</iter>
<iter>
<var name="${brand_name}">seagate</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:29.841" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'seagate')]</msg>
<status status="PASS" starttime="20220630 11:19:29.841" endtime="20220630 11:19:29.841"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:29.865" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'seagate')]'.</msg>
<status status="PASS" starttime="20220630 11:19:29.841" endtime="20220630 11:19:29.865"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:29.885" level="INFO">${url} = https://shopee.co.th/seagate_th</msg>
<status status="PASS" starttime="20220630 11:19:29.866" endtime="20220630 11:19:29.885"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:29.885" endtime="20220630 11:19:29.886"/>
</kw>
<status status="PASS" starttime="20220630 11:19:29.840" endtime="20220630 11:19:29.886"/>
</iter>
<iter>
<var name="${brand_name}">advice</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:29.888" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'advice')]</msg>
<status status="PASS" starttime="20220630 11:19:29.887" endtime="20220630 11:19:29.888"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:29.907" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'advice')]'.</msg>
<status status="PASS" starttime="20220630 11:19:29.888" endtime="20220630 11:19:29.907"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:29.924" level="INFO">${url} = https://shopee.co.th/adviceit_officialshop</msg>
<status status="PASS" starttime="20220630 11:19:29.908" endtime="20220630 11:19:29.924"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:29.924" endtime="20220630 11:19:29.925"/>
</kw>
<status status="PASS" starttime="20220630 11:19:29.886" endtime="20220630 11:19:29.925"/>
</iter>
<iter>
<var name="${brand_name}">asus</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:29.927" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'asus')]</msg>
<status status="PASS" starttime="20220630 11:19:29.926" endtime="20220630 11:19:29.927"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:29.943" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'asus')]'.</msg>
<status status="PASS" starttime="20220630 11:19:29.927" endtime="20220630 11:19:29.944"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:29.963" level="INFO">${url} = https://shopee.co.th/asus_officialstore</msg>
<status status="PASS" starttime="20220630 11:19:29.944" endtime="20220630 11:19:29.964"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:29.964" endtime="20220630 11:19:29.965"/>
</kw>
<status status="PASS" starttime="20220630 11:19:29.925" endtime="20220630 11:19:29.965"/>
</iter>
<iter>
<var name="${brand_name}">razer</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:29.967" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'razer')]</msg>
<status status="PASS" starttime="20220630 11:19:29.966" endtime="20220630 11:19:29.967"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:30.057" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'razer')]'.</msg>
<status status="PASS" starttime="20220630 11:19:29.968" endtime="20220630 11:19:30.057"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:30.609" level="INFO">${url} = https://shopee.co.th/razer.official.store</msg>
<status status="PASS" starttime="20220630 11:19:30.058" endtime="20220630 11:19:30.609"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:30.610" endtime="20220630 11:19:30.611"/>
</kw>
<status status="PASS" starttime="20220630 11:19:29.966" endtime="20220630 11:19:30.611"/>
</iter>
<iter>
<var name="${brand_name}">hp</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:30.613" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'hp')]</msg>
<status status="PASS" starttime="20220630 11:19:30.612" endtime="20220630 11:19:30.613"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:30.693" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'hp')]'.</msg>
<status status="PASS" starttime="20220630 11:19:30.614" endtime="20220630 11:19:30.693"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:30.815" level="INFO">${url} = https://shopee.co.th/online_hp</msg>
<status status="PASS" starttime="20220630 11:19:30.694" endtime="20220630 11:19:30.815"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:30.815" endtime="20220630 11:19:30.816"/>
</kw>
<status status="PASS" starttime="20220630 11:19:30.612" endtime="20220630 11:19:30.816"/>
</iter>
<iter>
<var name="${brand_name}">steelseries</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:30.817" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'steelseries')]</msg>
<status status="PASS" starttime="20220630 11:19:30.816" endtime="20220630 11:19:30.817"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:30.831" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'steelseries')]'.</msg>
<status status="PASS" starttime="20220630 11:19:30.817" endtime="20220630 11:19:30.831"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:30.847" level="INFO">${url} = https://shopee.co.th/steelseries_official_store</msg>
<status status="PASS" starttime="20220630 11:19:30.832" endtime="20220630 11:19:30.847"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:30.847" endtime="20220630 11:19:30.848"/>
</kw>
<status status="PASS" starttime="20220630 11:19:30.816" endtime="20220630 11:19:30.848"/>
</iter>
<iter>
<var name="${brand_name}">logi</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:30.849" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'logi')]</msg>
<status status="PASS" starttime="20220630 11:19:30.848" endtime="20220630 11:19:30.849"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:30.863" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'logi')]'.</msg>
<status status="PASS" starttime="20220630 11:19:30.849" endtime="20220630 11:19:30.863"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:30.877" level="INFO">${url} = https://shopee.co.th/logi.shop</msg>
<status status="PASS" starttime="20220630 11:19:30.863" endtime="20220630 11:19:30.877"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:30.877" endtime="20220630 11:19:30.878"/>
</kw>
<status status="PASS" starttime="20220630 11:19:30.848" endtime="20220630 11:19:30.878"/>
</iter>
<iter>
<var name="${brand_name}">lenovo</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:30.879" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'lenovo')]</msg>
<status status="PASS" starttime="20220630 11:19:30.879" endtime="20220630 11:19:30.879"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:30.900" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'lenovo')]'.</msg>
<status status="PASS" starttime="20220630 11:19:30.879" endtime="20220630 11:19:30.900"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:30.916" level="INFO">${url} = https://shopee.co.th/lenovothailand</msg>
<status status="PASS" starttime="20220630 11:19:30.900" endtime="20220630 11:19:30.916"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:30.916" endtime="20220630 11:19:30.917"/>
</kw>
<status status="PASS" starttime="20220630 11:19:30.878" endtime="20220630 11:19:30.917"/>
</iter>
<iter>
<var name="${brand_name}">huawei</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:30.918" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'huawei')]</msg>
<status status="PASS" starttime="20220630 11:19:30.917" endtime="20220630 11:19:30.918"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:30.932" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'huawei')]'.</msg>
<status status="PASS" starttime="20220630 11:19:30.918" endtime="20220630 11:19:30.932"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:30.947" level="INFO">${url} = https://shopee.co.th/huawei_official_store</msg>
<status status="PASS" starttime="20220630 11:19:30.932" endtime="20220630 11:19:30.947"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:30.948" endtime="20220630 11:19:30.948"/>
</kw>
<status status="PASS" starttime="20220630 11:19:30.917" endtime="20220630 11:19:30.948"/>
</iter>
<iter>
<var name="${brand_name}">tplink</var>
<kw name="Replace String" library="String">
<var>${comp_categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:30.949" level="INFO">${comp_categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'tplink')]</msg>
<status status="PASS" starttime="20220630 11:19:30.949" endtime="20220630 11:19:30.949"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${comp_categories_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:30.963" level="INFO">Current page contains element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'tplink')]'.</msg>
<status status="PASS" starttime="20220630 11:19:30.949" endtime="20220630 11:19:30.963"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${comp_categories_locator}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:30.980" level="INFO">${url} = https://shopee.co.th/tplink_thailand</msg>
<status status="PASS" starttime="20220630 11:19:30.964" endtime="20220630 11:19:30.980"/>
</kw>
<kw name="Set To Dictionary" library="Collections">
<arg>${data}[Computer_categories]</arg>
<arg>${brand_name}=${url}</arg>
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<status status="PASS" starttime="20220630 11:19:30.981" endtime="20220630 11:19:30.981"/>
</kw>
<status status="PASS" starttime="20220630 11:19:30.948" endtime="20220630 11:19:30.981"/>
</iter>
<status status="PASS" starttime="20220630 11:19:29.666" endtime="20220630 11:19:30.981"/>
</for>
<kw name="Record data into new file" library="common">
<arg>${data}</arg>
<kw name="Dump" library="yaml">
<var>${output}</var>
<arg>${data}</arg>
<doc>Serialize a Python object into a YAML stream.
If stream is None, return the produced string instead.</doc>
<msg timestamp="20220630 11:19:30.987" level="INFO">${output} = Computer_categories:
  advice: https://shopee.co.th/adviceit_officialshop
  asus: https://shopee.co.th/asus_officialstore
  hp: https://shopee.co.th/online_hp
  huawei: https://shopee.co.th/huawei_off...</msg>
<status status="PASS" starttime="20220630 11:19:30.982" endtime="20220630 11:19:30.987"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>OperatingSystem.File should not exist</arg>
<arg>${new_data_path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Not Exist" library="OperatingSystem">
<arg>${new_data_path}</arg>
<doc>Fails if the given path points to an existing file.</doc>
<msg timestamp="20220630 11:19:30.989" level="FAIL">File 'D:\Assignment\web5_assignment\keywords\utils\newdata.yaml' exists.</msg>
<status status="FAIL" starttime="20220630 11:19:30.987" endtime="20220630 11:19:30.989"/>
</kw>
<msg timestamp="20220630 11:19:30.989" level="INFO">${status} = False</msg>
<status status="PASS" starttime="20220630 11:19:30.987" endtime="20220630 11:19:30.989"/>
</kw>
<if>
<branch type="IF" condition="${status} =='False'">
<kw name="Remove File" library="OperatingSystem">
<arg>${new_data_path}</arg>
<doc>Removes a file with the given path.</doc>
<status status="NOT RUN" starttime="20220630 11:19:30.989" endtime="20220630 11:19:30.990"/>
</kw>
<kw name="Wait Until Removed" library="OperatingSystem">
<arg>${new_data_path}</arg>
<doc>Waits until the given file or directory is removed.</doc>
<status status="NOT RUN" starttime="20220630 11:19:30.990" endtime="20220630 11:19:30.990"/>
</kw>
<kw name="Create File" library="OperatingSystem">
<arg>${new_data_path}</arg>
<arg>${output}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<status status="NOT RUN" starttime="20220630 11:19:30.990" endtime="20220630 11:19:30.990"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:30.989" endtime="20220630 11:19:30.990"/>
</branch>
<branch type="ELSE">
<kw name="Create File" library="OperatingSystem">
<arg>${new_data_path}</arg>
<arg>${output}</arg>
<doc>Creates a file with the given content and encoding.</doc>
<msg timestamp="20220630 11:19:30.991" level="INFO" html="true">Created file '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\newdata.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\newdata.yaml&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20220630 11:19:30.990" endtime="20220630 11:19:30.991"/>
</kw>
<status status="PASS" starttime="20220630 11:19:30.990" endtime="20220630 11:19:30.991"/>
</branch>
<status status="PASS" starttime="20220630 11:19:30.989" endtime="20220630 11:19:30.991"/>
</if>
<status status="PASS" starttime="20220630 11:19:30.981" endtime="20220630 11:19:30.992"/>
</kw>
<status status="PASS" starttime="20220630 11:19:28.782" endtime="20220630 11:19:30.992"/>
</kw>
<kw name="Click at company name" library="computer">
<arg>IT CITY</arg>
<kw name="Get brand name and url from file" library="computer">
<var>${brand_name}</var>
<var>${brand_url}</var>
<arg>${keyword}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>BuiltIn.Should contain</arg>
<arg>${keyword}</arg>
<arg>${space}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Should Contain" library="BuiltIn">
<arg>${keyword}</arg>
<arg>${space}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20220630 11:19:30.995" endtime="20220630 11:19:30.995"/>
</kw>
<msg timestamp="20220630 11:19:30.995" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20220630 11:19:30.994" endtime="20220630 11:19:30.995"/>
</kw>
<if>
<branch type="IF" condition="'${status}'=='True'">
<kw name="Replace String" library="String">
<var>${convert_brand_to_same_key}</var>
<arg>${keyword}</arg>
<arg>${space}</arg>
<arg>${empty}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:30.997" level="INFO">${convert_brand_to_same_key} = ITCITY</msg>
<status status="PASS" starttime="20220630 11:19:30.996" endtime="20220630 11:19:30.998"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${brand_name}</var>
<arg>${convert_brand_to_same_key}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20220630 11:19:30.998" level="INFO">${brand_name} = itcity</msg>
<status status="PASS" starttime="20220630 11:19:30.998" endtime="20220630 11:19:30.998"/>
</kw>
<status status="PASS" starttime="20220630 11:19:30.996" endtime="20220630 11:19:30.998"/>
</branch>
<branch type="ELSE">
<kw name="Convert To Lower Case" library="String">
<var>${brand_name}</var>
<arg>${keyword}</arg>
<doc>Converts string to lower case.</doc>
<status status="NOT RUN" starttime="20220630 11:19:30.998" endtime="20220630 11:19:30.998"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:30.998" endtime="20220630 11:19:30.998"/>
</branch>
<status status="PASS" starttime="20220630 11:19:30.995" endtime="20220630 11:19:30.999"/>
</if>
<kw name="Get dictionary from file" library="common">
<var>${brand_dict}</var>
<var>${brand_key}</var>
<arg>${new_data_path}</arg>
<arg>Computer_categories</arg>
<kw name="Read data from file" library="common">
<var>${data}</var>
<arg>${path}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>OperatingSystem.File should exist</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220630 11:19:31.001" level="INFO" html="true">File '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\newdata.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\newdata.yaml&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220630 11:19:31.000" endtime="20220630 11:19:31.001"/>
</kw>
<msg timestamp="20220630 11:19:31.001" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20220630 11:19:31.000" endtime="20220630 11:19:31.001"/>
</kw>
<if>
<branch type="IF" condition="'${status}'=='True'">
<kw name="Get File" library="OperatingSystem">
<var>${data_file}</var>
<arg>${path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 11:19:31.002" level="INFO" html="true">Getting file '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\newdata.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\newdata.yaml&lt;/a&gt;'.</msg>
<msg timestamp="20220630 11:19:31.003" level="INFO">${data_file} = Computer_categories:
  advice: https://shopee.co.th/adviceit_officialshop
  asus: https://shopee.co.th/asus_officialstore
  hp: https://shopee.co.th/online_hp
  huawei: https://shopee.co.th/huawei_off...</msg>
<status status="PASS" starttime="20220630 11:19:31.001" endtime="20220630 11:19:31.003"/>
</kw>
<kw name="Safe Load" library="yaml">
<var>${data}</var>
<arg>${data_file}</arg>
<doc>Parse the first YAML document in a stream
and produce the corresponding Python object.</doc>
<msg timestamp="20220630 11:19:31.009" level="INFO">${data} = {'Computer_categories': {'advice': 'https://shopee.co.th/adviceit_officialshop', 'asus': 'https://shopee.co.th/asus_officialstore', 'hp': 'https://shopee.co.th/online_hp', 'huawei': 'https://shopee.co...</msg>
<status status="PASS" starttime="20220630 11:19:31.003" endtime="20220630 11:19:31.009"/>
</kw>
<status status="PASS" starttime="20220630 11:19:31.001" endtime="20220630 11:19:31.009"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Not found file at ${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220630 11:19:31.009" endtime="20220630 11:19:31.009"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:31.009" endtime="20220630 11:19:31.009"/>
</branch>
<status status="PASS" starttime="20220630 11:19:31.001" endtime="20220630 11:19:31.009"/>
</if>
<msg timestamp="20220630 11:19:31.009" level="INFO">${data} = {'Computer_categories': {'advice': 'https://shopee.co.th/adviceit_officialshop', 'asus': 'https://shopee.co.th/asus_officialstore', 'hp': 'https://shopee.co.th/online_hp', 'huawei': 'https://shopee.co...</msg>
<status status="PASS" starttime="20220630 11:19:30.999" endtime="20220630 11:19:31.010"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${dict}</var>
<arg>${data}[${keyword}]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20220630 11:19:31.010" level="INFO">${dict} = {'advice': 'https://shopee.co.th/adviceit_officialshop', 'asus': 'https://shopee.co.th/asus_officialstore', 'hp': 'https://shopee.co.th/online_hp', 'huawei': 'https://shopee.co.th/huawei_official_stor...</msg>
<status status="PASS" starttime="20220630 11:19:31.010" endtime="20220630 11:19:31.010"/>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<var>${key}</var>
<arg>${dict}</arg>
<arg>sort_keys=False</arg>
<doc>Returns keys of the given ``dictionary`` as a list.</doc>
<msg timestamp="20220630 11:19:31.011" level="INFO">${key} = ['advice', 'asus', 'hp', 'huawei', 'itcity', 'lenovo', 'logi', 'microsoft', 'razer', 'seagate', 'steelseries', 'tplink']</msg>
<status status="PASS" starttime="20220630 11:19:31.010" endtime="20220630 11:19:31.011"/>
</kw>
<msg timestamp="20220630 11:19:31.011" level="INFO">${brand_dict} = {'advice': 'https://shopee.co.th/adviceit_officialshop', 'asus': 'https://shopee.co.th/asus_officialstore', 'hp': 'https://shopee.co.th/online_hp', 'huawei': 'https://shopee.co.th/huawei_official_stor...</msg>
<msg timestamp="20220630 11:19:31.011" level="INFO">${brand_key} = ['advice', 'asus', 'hp', 'huawei', 'itcity', 'lenovo', 'logi', 'microsoft', 'razer', 'seagate', 'steelseries', 'tplink']</msg>
<status status="PASS" starttime="20220630 11:19:30.999" endtime="20220630 11:19:31.011"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${brand_url}</var>
<arg>${brand_dict}[${brand_name}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:31.012" level="INFO">${brand_url} = https://shopee.co.th/itcity</msg>
<status status="PASS" starttime="20220630 11:19:31.011" endtime="20220630 11:19:31.012"/>
</kw>
<msg timestamp="20220630 11:19:31.012" level="INFO">${brand_name} = itcity</msg>
<msg timestamp="20220630 11:19:31.012" level="INFO">${brand_url} = https://shopee.co.th/itcity</msg>
<status status="PASS" starttime="20220630 11:19:30.993" endtime="20220630 11:19:31.012"/>
</kw>
<kw name="Replace String" library="String">
<var>${categories_locator}</var>
<arg>${computer_categories_locator}</arg>
<arg>label</arg>
<arg>/${brand_name}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:31.013" level="INFO">${categories_locator} = xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'/itcity')]</msg>
<status status="PASS" starttime="20220630 11:19:31.012" endtime="20220630 11:19:31.013"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${categories_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:31.013" level="INFO">Clicking element 'xpath=//a[@class='ofs-carousel__shop-cover-image' and contains(@href,'/itcity')]'.</msg>
<status status="PASS" starttime="20220630 11:19:31.013" endtime="20220630 11:19:31.148"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${seller_profile_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:31.148" endtime="20220630 11:19:32.754"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${brand_url}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20220630 11:19:33.628" level="INFO">Current location is 'https://shopee.co.th/itcity'.</msg>
<status status="PASS" starttime="20220630 11:19:32.754" endtime="20220630 11:19:33.628"/>
</kw>
<kw name="Go Back" library="SeleniumLibrary">
<doc>Simulates the user clicking the back button on their browser.</doc>
<status status="PASS" starttime="20220630 11:19:33.629" endtime="20220630 11:19:34.381"/>
</kw>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>Computers</arg>
<arg>20s</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220630 11:19:34.382" endtime="20220630 11:19:34.389"/>
</kw>
<status status="PASS" starttime="20220630 11:19:30.992" endtime="20220630 11:19:34.390"/>
</kw>
<status status="PASS" starttime="20220630 11:19:28.782" endtime="20220630 11:19:34.390"/>
</kw>
<kw name="Search products sort by &quot;Popular, Latest, Top Sales and Price&quot;" library="computer_products_feature">
<kw name="Sort by keyword" library="computer_products_feature">
<arg>Popular</arg>
<kw name="Get dictionary from file" library="common">
<var>${sortby_dict}</var>
<var>${sortby_key}</var>
<arg>${data_path}</arg>
<arg>SortBy</arg>
<kw name="Read data from file" library="common">
<var>${data}</var>
<arg>${path}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>OperatingSystem.File should exist</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220630 11:19:34.396" level="INFO" html="true">File '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220630 11:19:34.395" endtime="20220630 11:19:34.396"/>
</kw>
<msg timestamp="20220630 11:19:34.396" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20220630 11:19:34.394" endtime="20220630 11:19:34.396"/>
</kw>
<if>
<branch type="IF" condition="'${status}'=='True'">
<kw name="Get File" library="OperatingSystem">
<var>${data_file}</var>
<arg>${path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 11:19:34.398" level="INFO" html="true">Getting file '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;'.</msg>
<msg timestamp="20220630 11:19:34.398" level="INFO">${data_file} = categories:
  - Men Clothes
  - Mobile &amp; Gadgets
  - Health &amp; Wellness
  - Watches &amp; Glasses
  - Men Shoes
  - Computers &amp; Laptops
  - Cameras
  - Sports &amp; Outdoors
  - Home Entertainment 
  - Gaming ...</msg>
<status status="PASS" starttime="20220630 11:19:34.397" endtime="20220630 11:19:34.398"/>
</kw>
<kw name="Safe Load" library="yaml">
<var>${data}</var>
<arg>${data_file}</arg>
<doc>Parse the first YAML document in a stream
and produce the corresponding Python object.</doc>
<msg timestamp="20220630 11:19:34.410" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:34.399" endtime="20220630 11:19:34.410"/>
</kw>
<status status="PASS" starttime="20220630 11:19:34.397" endtime="20220630 11:19:34.410"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Not found file at ${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220630 11:19:34.410" endtime="20220630 11:19:34.411"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:34.410" endtime="20220630 11:19:34.411"/>
</branch>
<status status="PASS" starttime="20220630 11:19:34.396" endtime="20220630 11:19:34.411"/>
</if>
<msg timestamp="20220630 11:19:34.411" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:34.393" endtime="20220630 11:19:34.411"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${dict}</var>
<arg>${data}[${keyword}]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20220630 11:19:34.413" level="INFO">${dict} = {'Popular': 'pop', 'Latest': 'ctime', 'Top_Sales': 'sales', 'Price': 'price'}</msg>
<status status="PASS" starttime="20220630 11:19:34.412" endtime="20220630 11:19:34.413"/>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<var>${key}</var>
<arg>${dict}</arg>
<arg>sort_keys=False</arg>
<doc>Returns keys of the given ``dictionary`` as a list.</doc>
<msg timestamp="20220630 11:19:34.414" level="INFO">${key} = ['Popular', 'Latest', 'Top_Sales', 'Price']</msg>
<status status="PASS" starttime="20220630 11:19:34.413" endtime="20220630 11:19:34.414"/>
</kw>
<msg timestamp="20220630 11:19:34.415" level="INFO">${sortby_dict} = {'Popular': 'pop', 'Latest': 'ctime', 'Top_Sales': 'sales', 'Price': 'price'}</msg>
<msg timestamp="20220630 11:19:34.415" level="INFO">${sortby_key} = ['Popular', 'Latest', 'Top_Sales', 'Price']</msg>
<status status="PASS" starttime="20220630 11:19:34.393" endtime="20220630 11:19:34.415"/>
</kw>
<kw name="Replace String" library="String">
<var>${top_sales_key}</var>
<arg>${sortby_key}[2]</arg>
<arg>_</arg>
<arg>${space}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:34.416" level="INFO">${top_sales_key} = Top Sales</msg>
<status status="PASS" starttime="20220630 11:19:34.415" endtime="20220630 11:19:34.416"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Popular}</var>
<arg>${sortby_key}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:34.418" level="INFO">${Popular} = Popular</msg>
<status status="PASS" starttime="20220630 11:19:34.417" endtime="20220630 11:19:34.418"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Latest}</var>
<arg>${sortby_key}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:34.419" level="INFO">${Latest} = Latest</msg>
<status status="PASS" starttime="20220630 11:19:34.418" endtime="20220630 11:19:34.419"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Top_Sales}</var>
<arg>${top_sales_key}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:34.420" level="INFO">${Top_Sales} = Top Sales</msg>
<status status="PASS" starttime="20220630 11:19:34.419" endtime="20220630 11:19:34.420"/>
</kw>
<if>
<branch type="IF" condition="'${keywords}' == '${Popular}'">
<kw name="Select popular dropdown" library="computer">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${sort_by_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:34.422" endtime="20220630 11:19:35.369"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${sort_by_locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20220630 11:19:35.369" endtime="20220630 11:19:35.681"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${pop_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:35.681" level="INFO">Clicking element 'xpath=//div[contains(@class,'shopee-sort-by-options') and contains(text(),'Popular')]'.</msg>
<status status="PASS" starttime="20220630 11:19:35.681" endtime="20220630 11:19:35.915"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${sort_by_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:35.915" endtime="20220630 11:19:36.977"/>
</kw>
<status status="PASS" starttime="20220630 11:19:34.421" endtime="20220630 11:19:36.978"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Popular]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<msg timestamp="20220630 11:19:36.985" level="INFO">Current location contains 'sortBy=pop'.</msg>
<status status="PASS" starttime="20220630 11:19:36.978" endtime="20220630 11:19:36.985"/>
</kw>
<status status="PASS" starttime="20220630 11:19:34.420" endtime="20220630 11:19:36.985"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}' == '${Latest}'">
<kw name="Select latest dropdown" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:36.985" endtime="20220630 11:19:36.985"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Latest]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:36.986" endtime="20220630 11:19:36.986"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:36.985" endtime="20220630 11:19:36.986"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}' == '${Top_Sales}'">
<kw name="Select top sales dropdown" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:36.986" endtime="20220630 11:19:36.986"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Top_Sales]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:36.986" endtime="20220630 11:19:36.986"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:36.986" endtime="20220630 11:19:36.987"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}'=='Low to High'">
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${price_locator}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:36.987" endtime="20220630 11:19:36.987"/>
</kw>
<kw name="Select price dropdown" library="computer">
<arg>${keywords}</arg>
<status status="NOT RUN" starttime="20220630 11:19:36.987" endtime="20220630 11:19:36.987"/>
</kw>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>?order=asc</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:36.987" endtime="20220630 11:19:36.987"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Price]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:36.987" endtime="20220630 11:19:36.988"/>
</kw>
<kw name="Verify third product is wireless mouse in search result" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:36.988" endtime="20220630 11:19:36.988"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:36.987" endtime="20220630 11:19:36.988"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}'=='High to Low'">
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${price_locator}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:36.988" endtime="20220630 11:19:36.988"/>
</kw>
<kw name="Select price dropdown" library="computer">
<arg>${keywords}</arg>
<status status="NOT RUN" starttime="20220630 11:19:36.988" endtime="20220630 11:19:36.988"/>
</kw>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>?order=desc</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:36.988" endtime="20220630 11:19:36.989"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Price]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:36.989" endtime="20220630 11:19:36.989"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:36.988" endtime="20220630 11:19:36.989"/>
</branch>
<status status="PASS" starttime="20220630 11:19:34.420" endtime="20220630 11:19:36.989"/>
</if>
<status status="PASS" starttime="20220630 11:19:34.392" endtime="20220630 11:19:36.989"/>
</kw>
<kw name="Sort by keyword" library="computer_products_feature">
<arg>Latest</arg>
<kw name="Get dictionary from file" library="common">
<var>${sortby_dict}</var>
<var>${sortby_key}</var>
<arg>${data_path}</arg>
<arg>SortBy</arg>
<kw name="Read data from file" library="common">
<var>${data}</var>
<arg>${path}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>OperatingSystem.File should exist</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220630 11:19:36.992" level="INFO" html="true">File '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220630 11:19:36.991" endtime="20220630 11:19:36.992"/>
</kw>
<msg timestamp="20220630 11:19:36.992" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20220630 11:19:36.991" endtime="20220630 11:19:36.992"/>
</kw>
<if>
<branch type="IF" condition="'${status}'=='True'">
<kw name="Get File" library="OperatingSystem">
<var>${data_file}</var>
<arg>${path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 11:19:36.993" level="INFO" html="true">Getting file '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;'.</msg>
<msg timestamp="20220630 11:19:36.993" level="INFO">${data_file} = categories:
  - Men Clothes
  - Mobile &amp; Gadgets
  - Health &amp; Wellness
  - Watches &amp; Glasses
  - Men Shoes
  - Computers &amp; Laptops
  - Cameras
  - Sports &amp; Outdoors
  - Home Entertainment 
  - Gaming ...</msg>
<status status="PASS" starttime="20220630 11:19:36.993" endtime="20220630 11:19:36.993"/>
</kw>
<kw name="Safe Load" library="yaml">
<var>${data}</var>
<arg>${data_file}</arg>
<doc>Parse the first YAML document in a stream
and produce the corresponding Python object.</doc>
<msg timestamp="20220630 11:19:37.000" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:36.994" endtime="20220630 11:19:37.000"/>
</kw>
<status status="PASS" starttime="20220630 11:19:36.992" endtime="20220630 11:19:37.001"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Not found file at ${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220630 11:19:37.001" endtime="20220630 11:19:37.001"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:37.001" endtime="20220630 11:19:37.001"/>
</branch>
<status status="PASS" starttime="20220630 11:19:36.992" endtime="20220630 11:19:37.001"/>
</if>
<msg timestamp="20220630 11:19:37.002" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:36.991" endtime="20220630 11:19:37.002"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${dict}</var>
<arg>${data}[${keyword}]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20220630 11:19:37.003" level="INFO">${dict} = {'Popular': 'pop', 'Latest': 'ctime', 'Top_Sales': 'sales', 'Price': 'price'}</msg>
<status status="PASS" starttime="20220630 11:19:37.002" endtime="20220630 11:19:37.003"/>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<var>${key}</var>
<arg>${dict}</arg>
<arg>sort_keys=False</arg>
<doc>Returns keys of the given ``dictionary`` as a list.</doc>
<msg timestamp="20220630 11:19:37.004" level="INFO">${key} = ['Popular', 'Latest', 'Top_Sales', 'Price']</msg>
<status status="PASS" starttime="20220630 11:19:37.003" endtime="20220630 11:19:37.004"/>
</kw>
<msg timestamp="20220630 11:19:37.004" level="INFO">${sortby_dict} = {'Popular': 'pop', 'Latest': 'ctime', 'Top_Sales': 'sales', 'Price': 'price'}</msg>
<msg timestamp="20220630 11:19:37.004" level="INFO">${sortby_key} = ['Popular', 'Latest', 'Top_Sales', 'Price']</msg>
<status status="PASS" starttime="20220630 11:19:36.990" endtime="20220630 11:19:37.004"/>
</kw>
<kw name="Replace String" library="String">
<var>${top_sales_key}</var>
<arg>${sortby_key}[2]</arg>
<arg>_</arg>
<arg>${space}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:37.005" level="INFO">${top_sales_key} = Top Sales</msg>
<status status="PASS" starttime="20220630 11:19:37.005" endtime="20220630 11:19:37.005"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Popular}</var>
<arg>${sortby_key}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:37.006" level="INFO">${Popular} = Popular</msg>
<status status="PASS" starttime="20220630 11:19:37.005" endtime="20220630 11:19:37.006"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Latest}</var>
<arg>${sortby_key}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:37.006" level="INFO">${Latest} = Latest</msg>
<status status="PASS" starttime="20220630 11:19:37.006" endtime="20220630 11:19:37.006"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Top_Sales}</var>
<arg>${top_sales_key}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:37.007" level="INFO">${Top_Sales} = Top Sales</msg>
<status status="PASS" starttime="20220630 11:19:37.006" endtime="20220630 11:19:37.007"/>
</kw>
<if>
<branch type="IF" condition="'${keywords}' == '${Popular}'">
<kw name="Select popular dropdown" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:37.007" endtime="20220630 11:19:37.008"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Popular]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:37.008" endtime="20220630 11:19:37.008"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:37.007" endtime="20220630 11:19:37.008"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}' == '${Latest}'">
<kw name="Select latest dropdown" library="computer">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${sort_by_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:37.009" endtime="20220630 11:19:37.029"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${sort_by_locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20220630 11:19:37.029" endtime="20220630 11:19:37.317"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${latest_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:37.318" level="INFO">Clicking element 'xpath=//div[contains(@class,'shopee-sort-by-options') and contains(text(),'Latest')]'.</msg>
<status status="PASS" starttime="20220630 11:19:37.317" endtime="20220630 11:19:37.561"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${sort_by_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:37.562" endtime="20220630 11:19:38.574"/>
</kw>
<status status="PASS" starttime="20220630 11:19:37.009" endtime="20220630 11:19:38.574"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Latest]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<msg timestamp="20220630 11:19:38.579" level="INFO">Current location contains 'sortBy=ctime'.</msg>
<status status="PASS" starttime="20220630 11:19:38.575" endtime="20220630 11:19:38.580"/>
</kw>
<status status="PASS" starttime="20220630 11:19:37.008" endtime="20220630 11:19:38.580"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}' == '${Top_Sales}'">
<kw name="Select top sales dropdown" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:38.580" endtime="20220630 11:19:38.580"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Top_Sales]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:38.581" endtime="20220630 11:19:38.581"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:38.580" endtime="20220630 11:19:38.581"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}'=='Low to High'">
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${price_locator}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:38.581" endtime="20220630 11:19:38.581"/>
</kw>
<kw name="Select price dropdown" library="computer">
<arg>${keywords}</arg>
<status status="NOT RUN" starttime="20220630 11:19:38.582" endtime="20220630 11:19:38.582"/>
</kw>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>?order=asc</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:38.582" endtime="20220630 11:19:38.582"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Price]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:38.582" endtime="20220630 11:19:38.582"/>
</kw>
<kw name="Verify third product is wireless mouse in search result" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:38.582" endtime="20220630 11:19:38.582"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:38.581" endtime="20220630 11:19:38.582"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}'=='High to Low'">
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${price_locator}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:38.583" endtime="20220630 11:19:38.583"/>
</kw>
<kw name="Select price dropdown" library="computer">
<arg>${keywords}</arg>
<status status="NOT RUN" starttime="20220630 11:19:38.583" endtime="20220630 11:19:38.583"/>
</kw>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>?order=desc</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:38.583" endtime="20220630 11:19:38.584"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Price]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:38.584" endtime="20220630 11:19:38.584"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:38.583" endtime="20220630 11:19:38.584"/>
</branch>
<status status="PASS" starttime="20220630 11:19:37.007" endtime="20220630 11:19:38.584"/>
</if>
<status status="PASS" starttime="20220630 11:19:36.989" endtime="20220630 11:19:38.585"/>
</kw>
<kw name="Sort by keyword" library="computer_products_feature">
<arg>Top Sales</arg>
<kw name="Get dictionary from file" library="common">
<var>${sortby_dict}</var>
<var>${sortby_key}</var>
<arg>${data_path}</arg>
<arg>SortBy</arg>
<kw name="Read data from file" library="common">
<var>${data}</var>
<arg>${path}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>OperatingSystem.File should exist</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220630 11:19:38.589" level="INFO" html="true">File '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220630 11:19:38.588" endtime="20220630 11:19:38.589"/>
</kw>
<msg timestamp="20220630 11:19:38.589" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20220630 11:19:38.587" endtime="20220630 11:19:38.589"/>
</kw>
<if>
<branch type="IF" condition="'${status}'=='True'">
<kw name="Get File" library="OperatingSystem">
<var>${data_file}</var>
<arg>${path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 11:19:38.590" level="INFO" html="true">Getting file '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;'.</msg>
<msg timestamp="20220630 11:19:38.591" level="INFO">${data_file} = categories:
  - Men Clothes
  - Mobile &amp; Gadgets
  - Health &amp; Wellness
  - Watches &amp; Glasses
  - Men Shoes
  - Computers &amp; Laptops
  - Cameras
  - Sports &amp; Outdoors
  - Home Entertainment 
  - Gaming ...</msg>
<status status="PASS" starttime="20220630 11:19:38.590" endtime="20220630 11:19:38.591"/>
</kw>
<kw name="Safe Load" library="yaml">
<var>${data}</var>
<arg>${data_file}</arg>
<doc>Parse the first YAML document in a stream
and produce the corresponding Python object.</doc>
<msg timestamp="20220630 11:19:38.601" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:38.591" endtime="20220630 11:19:38.601"/>
</kw>
<status status="PASS" starttime="20220630 11:19:38.590" endtime="20220630 11:19:38.601"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Not found file at ${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220630 11:19:38.602" endtime="20220630 11:19:38.602"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:38.601" endtime="20220630 11:19:38.602"/>
</branch>
<status status="PASS" starttime="20220630 11:19:38.589" endtime="20220630 11:19:38.602"/>
</if>
<msg timestamp="20220630 11:19:38.602" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:38.587" endtime="20220630 11:19:38.602"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${dict}</var>
<arg>${data}[${keyword}]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20220630 11:19:38.603" level="INFO">${dict} = {'Popular': 'pop', 'Latest': 'ctime', 'Top_Sales': 'sales', 'Price': 'price'}</msg>
<status status="PASS" starttime="20220630 11:19:38.603" endtime="20220630 11:19:38.604"/>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<var>${key}</var>
<arg>${dict}</arg>
<arg>sort_keys=False</arg>
<doc>Returns keys of the given ``dictionary`` as a list.</doc>
<msg timestamp="20220630 11:19:38.604" level="INFO">${key} = ['Popular', 'Latest', 'Top_Sales', 'Price']</msg>
<status status="PASS" starttime="20220630 11:19:38.604" endtime="20220630 11:19:38.605"/>
</kw>
<msg timestamp="20220630 11:19:38.605" level="INFO">${sortby_dict} = {'Popular': 'pop', 'Latest': 'ctime', 'Top_Sales': 'sales', 'Price': 'price'}</msg>
<msg timestamp="20220630 11:19:38.605" level="INFO">${sortby_key} = ['Popular', 'Latest', 'Top_Sales', 'Price']</msg>
<status status="PASS" starttime="20220630 11:19:38.586" endtime="20220630 11:19:38.605"/>
</kw>
<kw name="Replace String" library="String">
<var>${top_sales_key}</var>
<arg>${sortby_key}[2]</arg>
<arg>_</arg>
<arg>${space}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:38.606" level="INFO">${top_sales_key} = Top Sales</msg>
<status status="PASS" starttime="20220630 11:19:38.606" endtime="20220630 11:19:38.606"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Popular}</var>
<arg>${sortby_key}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:38.607" level="INFO">${Popular} = Popular</msg>
<status status="PASS" starttime="20220630 11:19:38.607" endtime="20220630 11:19:38.607"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Latest}</var>
<arg>${sortby_key}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:38.608" level="INFO">${Latest} = Latest</msg>
<status status="PASS" starttime="20220630 11:19:38.608" endtime="20220630 11:19:38.608"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Top_Sales}</var>
<arg>${top_sales_key}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:38.609" level="INFO">${Top_Sales} = Top Sales</msg>
<status status="PASS" starttime="20220630 11:19:38.609" endtime="20220630 11:19:38.609"/>
</kw>
<if>
<branch type="IF" condition="'${keywords}' == '${Popular}'">
<kw name="Select popular dropdown" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:38.610" endtime="20220630 11:19:38.610"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Popular]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:38.610" endtime="20220630 11:19:38.610"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:38.610" endtime="20220630 11:19:38.611"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}' == '${Latest}'">
<kw name="Select latest dropdown" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:38.611" endtime="20220630 11:19:38.611"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Latest]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:38.612" endtime="20220630 11:19:38.612"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:38.611" endtime="20220630 11:19:38.612"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}' == '${Top_Sales}'">
<kw name="Select top sales dropdown" library="computer">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${sort_by_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:38.613" endtime="20220630 11:19:38.635"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${sort_by_locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20220630 11:19:38.635" endtime="20220630 11:19:38.924"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${top_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:38.924" level="INFO">Clicking element 'xpath=//div[contains(@class,'shopee-sort-by-options') and contains(text(),'Top Sales')]'.</msg>
<status status="PASS" starttime="20220630 11:19:38.924" endtime="20220630 11:19:39.311"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${sort_by_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:39.311" endtime="20220630 11:19:40.437"/>
</kw>
<status status="PASS" starttime="20220630 11:19:38.613" endtime="20220630 11:19:40.437"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Top_Sales]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<msg timestamp="20220630 11:19:40.446" level="INFO">Current location contains 'sortBy=sales'.</msg>
<status status="PASS" starttime="20220630 11:19:40.438" endtime="20220630 11:19:40.447"/>
</kw>
<status status="PASS" starttime="20220630 11:19:38.612" endtime="20220630 11:19:40.447"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}'=='Low to High'">
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${price_locator}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:40.447" endtime="20220630 11:19:40.447"/>
</kw>
<kw name="Select price dropdown" library="computer">
<arg>${keywords}</arg>
<status status="NOT RUN" starttime="20220630 11:19:40.447" endtime="20220630 11:19:40.447"/>
</kw>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>?order=asc</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:40.447" endtime="20220630 11:19:40.447"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Price]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:40.448" endtime="20220630 11:19:40.448"/>
</kw>
<kw name="Verify third product is wireless mouse in search result" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:40.448" endtime="20220630 11:19:40.448"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:40.447" endtime="20220630 11:19:40.448"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}'=='High to Low'">
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${price_locator}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:40.449" endtime="20220630 11:19:40.449"/>
</kw>
<kw name="Select price dropdown" library="computer">
<arg>${keywords}</arg>
<status status="NOT RUN" starttime="20220630 11:19:40.449" endtime="20220630 11:19:40.449"/>
</kw>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>?order=desc</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:40.449" endtime="20220630 11:19:40.450"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Price]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:40.450" endtime="20220630 11:19:40.450"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:40.448" endtime="20220630 11:19:40.450"/>
</branch>
<status status="PASS" starttime="20220630 11:19:38.609" endtime="20220630 11:19:40.450"/>
</if>
<status status="PASS" starttime="20220630 11:19:38.585" endtime="20220630 11:19:40.450"/>
</kw>
<kw name="Sort by keyword" library="computer_products_feature">
<arg>Low to High</arg>
<kw name="Get dictionary from file" library="common">
<var>${sortby_dict}</var>
<var>${sortby_key}</var>
<arg>${data_path}</arg>
<arg>SortBy</arg>
<kw name="Read data from file" library="common">
<var>${data}</var>
<arg>${path}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>OperatingSystem.File should exist</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220630 11:19:40.455" level="INFO" html="true">File '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220630 11:19:40.454" endtime="20220630 11:19:40.455"/>
</kw>
<msg timestamp="20220630 11:19:40.455" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20220630 11:19:40.453" endtime="20220630 11:19:40.455"/>
</kw>
<if>
<branch type="IF" condition="'${status}'=='True'">
<kw name="Get File" library="OperatingSystem">
<var>${data_file}</var>
<arg>${path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 11:19:40.456" level="INFO" html="true">Getting file '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;'.</msg>
<msg timestamp="20220630 11:19:40.456" level="INFO">${data_file} = categories:
  - Men Clothes
  - Mobile &amp; Gadgets
  - Health &amp; Wellness
  - Watches &amp; Glasses
  - Men Shoes
  - Computers &amp; Laptops
  - Cameras
  - Sports &amp; Outdoors
  - Home Entertainment 
  - Gaming ...</msg>
<status status="PASS" starttime="20220630 11:19:40.455" endtime="20220630 11:19:40.457"/>
</kw>
<kw name="Safe Load" library="yaml">
<var>${data}</var>
<arg>${data_file}</arg>
<doc>Parse the first YAML document in a stream
and produce the corresponding Python object.</doc>
<msg timestamp="20220630 11:19:40.462" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:40.457" endtime="20220630 11:19:40.462"/>
</kw>
<status status="PASS" starttime="20220630 11:19:40.455" endtime="20220630 11:19:40.462"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Not found file at ${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220630 11:19:40.462" endtime="20220630 11:19:40.463"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:40.462" endtime="20220630 11:19:40.463"/>
</branch>
<status status="PASS" starttime="20220630 11:19:40.455" endtime="20220630 11:19:40.463"/>
</if>
<msg timestamp="20220630 11:19:40.463" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:40.452" endtime="20220630 11:19:40.463"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${dict}</var>
<arg>${data}[${keyword}]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20220630 11:19:40.464" level="INFO">${dict} = {'Popular': 'pop', 'Latest': 'ctime', 'Top_Sales': 'sales', 'Price': 'price'}</msg>
<status status="PASS" starttime="20220630 11:19:40.463" endtime="20220630 11:19:40.464"/>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<var>${key}</var>
<arg>${dict}</arg>
<arg>sort_keys=False</arg>
<doc>Returns keys of the given ``dictionary`` as a list.</doc>
<msg timestamp="20220630 11:19:40.464" level="INFO">${key} = ['Popular', 'Latest', 'Top_Sales', 'Price']</msg>
<status status="PASS" starttime="20220630 11:19:40.464" endtime="20220630 11:19:40.464"/>
</kw>
<msg timestamp="20220630 11:19:40.465" level="INFO">${sortby_dict} = {'Popular': 'pop', 'Latest': 'ctime', 'Top_Sales': 'sales', 'Price': 'price'}</msg>
<msg timestamp="20220630 11:19:40.465" level="INFO">${sortby_key} = ['Popular', 'Latest', 'Top_Sales', 'Price']</msg>
<status status="PASS" starttime="20220630 11:19:40.452" endtime="20220630 11:19:40.465"/>
</kw>
<kw name="Replace String" library="String">
<var>${top_sales_key}</var>
<arg>${sortby_key}[2]</arg>
<arg>_</arg>
<arg>${space}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:40.466" level="INFO">${top_sales_key} = Top Sales</msg>
<status status="PASS" starttime="20220630 11:19:40.466" endtime="20220630 11:19:40.467"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Popular}</var>
<arg>${sortby_key}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:40.467" level="INFO">${Popular} = Popular</msg>
<status status="PASS" starttime="20220630 11:19:40.467" endtime="20220630 11:19:40.467"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Latest}</var>
<arg>${sortby_key}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:40.468" level="INFO">${Latest} = Latest</msg>
<status status="PASS" starttime="20220630 11:19:40.467" endtime="20220630 11:19:40.468"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${Top_Sales}</var>
<arg>${top_sales_key}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:40.468" level="INFO">${Top_Sales} = Top Sales</msg>
<status status="PASS" starttime="20220630 11:19:40.468" endtime="20220630 11:19:40.468"/>
</kw>
<if>
<branch type="IF" condition="'${keywords}' == '${Popular}'">
<kw name="Select popular dropdown" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:40.469" endtime="20220630 11:19:40.469"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Popular]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:40.469" endtime="20220630 11:19:40.469"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:40.469" endtime="20220630 11:19:40.469"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}' == '${Latest}'">
<kw name="Select latest dropdown" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:40.470" endtime="20220630 11:19:40.470"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Latest]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:40.470" endtime="20220630 11:19:40.470"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:40.469" endtime="20220630 11:19:40.470"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}' == '${Top_Sales}'">
<kw name="Select top sales dropdown" library="computer">
<status status="NOT RUN" starttime="20220630 11:19:40.470" endtime="20220630 11:19:40.470"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Top_Sales]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:40.470" endtime="20220630 11:19:40.470"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:40.470" endtime="20220630 11:19:40.471"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}'=='Low to High'">
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${price_locator}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<msg timestamp="20220630 11:19:40.471" level="INFO">Simulating Mouse Over on element 'xpath=//div[@class='select-with-status']//span[contains(text(),'Price')]'.</msg>
<status status="PASS" starttime="20220630 11:19:40.471" endtime="20220630 11:19:40.788"/>
</kw>
<kw name="Select price dropdown" library="computer">
<arg>${keywords}</arg>
<kw name="Replace String" library="String">
<var>${price_dropdown_locator}</var>
<arg>${price_dropdown_locator}</arg>
<arg>label</arg>
<arg>${keyword}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:40.789" level="INFO">${price_dropdown_locator} = xpath=//div[contains(@class,'select-with-status__dropdown-item') and contains(text(),'Low to High')]</msg>
<status status="PASS" starttime="20220630 11:19:40.789" endtime="20220630 11:19:40.789"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${price_dropdown_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:40.790" endtime="20220630 11:19:40.817"/>
</kw>
<kw name="Mouse Down" library="SeleniumLibrary">
<arg>${price_dropdown_locator}</arg>
<doc>Simulates pressing the left mouse button on the element ``locator``.</doc>
<msg timestamp="20220630 11:19:40.817" level="INFO">Simulating Mouse Down on element 'xpath=//div[contains(@class,'select-with-status__dropdown-item') and contains(text(),'Low to High')]'.</msg>
<status status="PASS" starttime="20220630 11:19:40.817" endtime="20220630 11:19:41.102"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${price_dropdown_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:41.103" level="INFO">Clicking element 'xpath=//div[contains(@class,'select-with-status__dropdown-item') and contains(text(),'Low to High')]'.</msg>
<status status="PASS" starttime="20220630 11:19:41.102" endtime="20220630 11:19:41.327"/>
</kw>
<status status="PASS" starttime="20220630 11:19:40.788" endtime="20220630 11:19:41.327"/>
</kw>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>?order=asc</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="PASS" starttime="20220630 11:19:41.327" endtime="20220630 11:19:41.337"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Price]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<msg timestamp="20220630 11:19:41.342" level="INFO">Current location contains 'sortBy=price'.</msg>
<status status="PASS" starttime="20220630 11:19:41.337" endtime="20220630 11:19:41.342"/>
</kw>
<kw name="Verify third product is wireless mouse in search result" library="computer">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${product_result_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:41.343" endtime="20220630 11:19:42.283"/>
</kw>
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<arg>${product_result_locator}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" starttime="20220630 11:19:42.283" endtime="20220630 11:19:42.780"/>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<arg>SeleniumLibrary.Page should contain element</arg>
<arg>${search_result3_locator}</arg>
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${search_result3_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:43.053" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-21.png"&gt;&lt;img src="selenium-screenshot-21.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20220630 11:19:43.055" level="FAIL">InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //div[contains(@class,'shopee-search-item-result__item')]/div[3]/a[contains(@href='เมาส์ไร้สาย MI')] because of the following error:
SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[contains(@class,'shopee-search-item-result__item')]/div[3]/a[contains(@href='เมาส์ไร้สาย MI')]' is not a valid XPath expression.
  (Session info: chrome=102.0.5005.115)
</msg>
<status status="FAIL" starttime="20220630 11:19:42.781" endtime="20220630 11:19:43.059"/>
</kw>
<status status="FAIL" starttime="20220630 11:19:42.780" endtime="20220630 11:19:43.060"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${search_result_is_not_visible}</var>
<arg>SeleniumLibrary.Page should contain element</arg>
<arg>${search_result3_locator}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${search_result3_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:43.290" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="selenium-screenshot-22.png"&gt;&lt;img src="selenium-screenshot-22.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20220630 11:19:43.290" level="FAIL">InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //div[contains(@class,'shopee-search-item-result__item')]/div[3]/a[contains(@href='เมาส์ไร้สาย MI')] because of the following error:
SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[contains(@class,'shopee-search-item-result__item')]/div[3]/a[contains(@href='เมาส์ไร้สาย MI')]' is not a valid XPath expression.
  (Session info: chrome=102.0.5005.115)
</msg>
<status status="FAIL" starttime="20220630 11:19:43.061" endtime="20220630 11:19:43.291"/>
</kw>
<msg timestamp="20220630 11:19:43.292" level="INFO">${search_result_is_not_visible} = False</msg>
<status status="PASS" starttime="20220630 11:19:43.061" endtime="20220630 11:19:43.292"/>
</kw>
<if>
<branch type="IF" condition="${search_result_is_not_visible}">
<kw name="Log" library="BuiltIn">
<arg>Pass because found wireless mouse MI at third product</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220630 11:19:43.292" endtime="20220630 11:19:43.292"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:43.292" endtime="20220630 11:19:43.292"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Fail because not found wireless mouse MI at third product</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220630 11:19:43.292" endtime="20220630 11:19:43.293"/>
</kw>
<status status="PASS" starttime="20220630 11:19:43.292" endtime="20220630 11:19:43.293"/>
</branch>
<status status="PASS" starttime="20220630 11:19:43.292" endtime="20220630 11:19:43.293"/>
</if>
<status status="FAIL" starttime="20220630 11:19:41.342" endtime="20220630 11:19:43.294"/>
</kw>
<status status="FAIL" starttime="20220630 11:19:40.471" endtime="20220630 11:19:43.294"/>
</branch>
<branch type="ELSE IF" condition="'${keywords}'=='High to Low'">
<kw name="Mouse Over" library="SeleniumLibrary">
<arg>${price_locator}</arg>
<doc>Simulates hovering the mouse over the element ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:43.295" endtime="20220630 11:19:43.295"/>
</kw>
<kw name="Select price dropdown" library="computer">
<arg>${keywords}</arg>
<status status="NOT RUN" starttime="20220630 11:19:43.295" endtime="20220630 11:19:43.295"/>
</kw>
<kw name="Wait Until Location Contains" library="SeleniumLibrary">
<arg>?order=desc</arg>
<doc>Waits until the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:43.295" endtime="20220630 11:19:43.295"/>
</kw>
<kw name="Location Should Contain" library="SeleniumLibrary">
<arg>sortBy=${sortby_dict}[Price]</arg>
<doc>Verifies that the current URL contains ``expected``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:43.295" endtime="20220630 11:19:43.295"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:43.295" endtime="20220630 11:19:43.295"/>
</branch>
<status status="FAIL" starttime="20220630 11:19:40.468" endtime="20220630 11:19:43.296"/>
</if>
<status status="FAIL" starttime="20220630 11:19:40.451" endtime="20220630 11:19:43.297"/>
</kw>
<status status="FAIL" starttime="20220630 11:19:34.391" endtime="20220630 11:19:43.297"/>
</kw>
<kw name="Click see all to view all company names" library="computer_products_feature">
<kw name="Click see all to view all company" library="computer">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${categories_sidebar_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:43.299" endtime="20220630 11:19:43.330"/>
</kw>
<kw name="Get Element Attribute" library="SeleniumLibrary">
<var>${url}</var>
<arg>${see_all_url}</arg>
<arg>href</arg>
<doc>Returns the value of ``attribute`` from the element ``locator``.</doc>
<msg timestamp="20220630 11:19:43.351" level="INFO">${url} = https://shopee.co.th/mall/brands/11044958</msg>
<status status="PASS" starttime="20220630 11:19:43.330" endtime="20220630 11:19:43.351"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${see_all_locator}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:43.352" level="INFO">Clicking element 'xpath=//a[@class='ofs-carousel__header-right']/div[contains(text(),'See All')]'.</msg>
<status status="PASS" starttime="20220630 11:19:43.351" endtime="20220630 11:19:43.494"/>
</kw>
<kw name="Location Should Be" library="SeleniumLibrary">
<arg>${url}</arg>
<doc>Verifies that the current URL is exactly ``url``.</doc>
<msg timestamp="20220630 11:19:43.567" level="INFO">Current location is 'https://shopee.co.th/mall/brands/11044958'.</msg>
<status status="PASS" starttime="20220630 11:19:43.495" endtime="20220630 11:19:43.567"/>
</kw>
<status status="PASS" starttime="20220630 11:19:43.299" endtime="20220630 11:19:43.567"/>
</kw>
<status status="PASS" starttime="20220630 11:19:43.298" endtime="20220630 11:19:43.568"/>
</kw>
<kw name="Search company names by click at alphabet A-Z and verify the result is correct" library="search_brand_feature">
<kw name="Search company name by click at alphabet" library="search_with_alphabet">
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>${alphabet_locator}</arg>
<arg>20s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20220630 11:19:43.571" endtime="20220630 11:19:44.101"/>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<var>${total_alphabet}</var>
<arg>${alphabet_locator}</arg>
<doc>Returns the number of elements matching ``locator``.</doc>
<msg timestamp="20220630 11:19:44.125" level="INFO">${total_alphabet} = 26</msg>
<status status="PASS" starttime="20220630 11:19:44.102" endtime="20220630 11:19:44.125"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${total_alphabet}+1</value>
<iter>
<var name="${index}">1</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:44.128" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][1]</msg>
<status status="PASS" starttime="20220630 11:19:44.126" endtime="20220630 11:19:44.128"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.194" level="INFO">${alphabet} = A</msg>
<status status="PASS" starttime="20220630 11:19:44.128" endtime="20220630 11:19:44.194"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.195" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][1]'.</msg>
<status status="PASS" starttime="20220630 11:19:44.194" endtime="20220630 11:19:44.335"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:44.337" level="INFO">${check_alphabet} = ['A']</msg>
<status status="PASS" starttime="20220630 11:19:44.336" endtime="20220630 11:19:44.337"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:44.338" level="INFO">${chars} = A</msg>
<status status="PASS" starttime="20220630 11:19:44.337" endtime="20220630 11:19:44.338"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:44.340" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'A')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:44.340" endtime="20220630 11:19:44.340"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:44.369" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="1be1ff87-d4a1-4274-9f57-ea7ed0d50b52")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:44.340" endtime="20220630 11:19:44.370"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:44.370" level="INFO">Length is 17</msg>
<msg timestamp="20220630 11:19:44.370" level="INFO">${brand_list_length} = 17</msg>
<status status="PASS" starttime="20220630 11:19:44.370" endtime="20220630 11:19:44.370"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.395" level="INFO">${brand_name} = Acer</msg>
<status status="PASS" starttime="20220630 11:19:44.371" endtime="20220630 11:19:44.395"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.396" level="INFO">${upper_text} = ACER</msg>
<status status="PASS" starttime="20220630 11:19:44.395" endtime="20220630 11:19:44.396"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.396" endtime="20220630 11:19:44.398"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.371" endtime="20220630 11:19:44.398"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.427" level="INFO">${brand_name} = Acer</msg>
<status status="PASS" starttime="20220630 11:19:44.398" endtime="20220630 11:19:44.427"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.428" level="INFO">${upper_text} = ACER</msg>
<status status="PASS" starttime="20220630 11:19:44.427" endtime="20220630 11:19:44.428"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.428" endtime="20220630 11:19:44.429"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.398" endtime="20220630 11:19:44.429"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.445" level="INFO">${brand_name} = Adata</msg>
<status status="PASS" starttime="20220630 11:19:44.430" endtime="20220630 11:19:44.445"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.446" level="INFO">${upper_text} = ADATA</msg>
<status status="PASS" starttime="20220630 11:19:44.446" endtime="20220630 11:19:44.446"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.446" endtime="20220630 11:19:44.447"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.430" endtime="20220630 11:19:44.447"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.474" level="INFO">${brand_name} = Advice</msg>
<status status="PASS" starttime="20220630 11:19:44.447" endtime="20220630 11:19:44.474"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.475" level="INFO">${upper_text} = ADVICE</msg>
<status status="PASS" starttime="20220630 11:19:44.475" endtime="20220630 11:19:44.475"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.476" endtime="20220630 11:19:44.476"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.447" endtime="20220630 11:19:44.477"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.494" level="INFO">${brand_name} = AK Racing</msg>
<status status="PASS" starttime="20220630 11:19:44.477" endtime="20220630 11:19:44.494"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.495" level="INFO">${upper_text} = AK RACING</msg>
<status status="PASS" starttime="20220630 11:19:44.494" endtime="20220630 11:19:44.495"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.495" endtime="20220630 11:19:44.496"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.477" endtime="20220630 11:19:44.496"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.513" level="INFO">${brand_name} = AMD</msg>
<status status="PASS" starttime="20220630 11:19:44.496" endtime="20220630 11:19:44.513"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.513" level="INFO">${upper_text} = AMD</msg>
<status status="PASS" starttime="20220630 11:19:44.513" endtime="20220630 11:19:44.513"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.514" endtime="20220630 11:19:44.514"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.496" endtime="20220630 11:19:44.514"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.530" level="INFO">${brand_name} = Anda Seat</msg>
<status status="PASS" starttime="20220630 11:19:44.514" endtime="20220630 11:19:44.530"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.531" level="INFO">${upper_text} = ANDA SEAT</msg>
<status status="PASS" starttime="20220630 11:19:44.530" endtime="20220630 11:19:44.531"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.531" endtime="20220630 11:19:44.531"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.514" endtime="20220630 11:19:44.531"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.548" level="INFO">${brand_name} = Anitech</msg>
<status status="PASS" starttime="20220630 11:19:44.532" endtime="20220630 11:19:44.548"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.549" level="INFO">${upper_text} = ANITECH</msg>
<status status="PASS" starttime="20220630 11:19:44.548" endtime="20220630 11:19:44.549"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.549" endtime="20220630 11:19:44.549"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.532" endtime="20220630 11:19:44.550"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.566" level="INFO">${brand_name} = Antec</msg>
<status status="PASS" starttime="20220630 11:19:44.550" endtime="20220630 11:19:44.566"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.567" level="INFO">${upper_text} = ANTEC</msg>
<status status="PASS" starttime="20220630 11:19:44.566" endtime="20220630 11:19:44.567"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.567" endtime="20220630 11:19:44.568"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.550" endtime="20220630 11:19:44.568"/>
</iter>
<iter>
<var name="${index}">10</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.585" level="INFO">${brand_name} = AOC</msg>
<status status="PASS" starttime="20220630 11:19:44.569" endtime="20220630 11:19:44.585"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.586" level="INFO">${upper_text} = AOC</msg>
<status status="PASS" starttime="20220630 11:19:44.585" endtime="20220630 11:19:44.586"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.586" endtime="20220630 11:19:44.586"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.568" endtime="20220630 11:19:44.587"/>
</iter>
<iter>
<var name="${index}">11</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.603" level="INFO">${brand_name} = APC by Schneider</msg>
<status status="PASS" starttime="20220630 11:19:44.587" endtime="20220630 11:19:44.603"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.604" level="INFO">${upper_text} = APC BY SCHNEIDER</msg>
<status status="PASS" starttime="20220630 11:19:44.603" endtime="20220630 11:19:44.604"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.604" endtime="20220630 11:19:44.604"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.587" endtime="20220630 11:19:44.604"/>
</iter>
<iter>
<var name="${index}">12</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.622" level="INFO">${brand_name} = Arctic</msg>
<status status="PASS" starttime="20220630 11:19:44.605" endtime="20220630 11:19:44.622"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.623" level="INFO">${upper_text} = ARCTIC</msg>
<status status="PASS" starttime="20220630 11:19:44.622" endtime="20220630 11:19:44.623"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.623" endtime="20220630 11:19:44.623"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.605" endtime="20220630 11:19:44.623"/>
</iter>
<iter>
<var name="${index}">13</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.640" level="INFO">${brand_name} = Aruba</msg>
<status status="PASS" starttime="20220630 11:19:44.624" endtime="20220630 11:19:44.640"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.640" level="INFO">${upper_text} = ARUBA</msg>
<status status="PASS" starttime="20220630 11:19:44.640" endtime="20220630 11:19:44.641"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.641" endtime="20220630 11:19:44.641"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.623" endtime="20220630 11:19:44.641"/>
</iter>
<iter>
<var name="${index}">14</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.658" level="INFO">${brand_name} = ASTON</msg>
<status status="PASS" starttime="20220630 11:19:44.642" endtime="20220630 11:19:44.658"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.658" level="INFO">${upper_text} = ASTON</msg>
<status status="PASS" starttime="20220630 11:19:44.658" endtime="20220630 11:19:44.658"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.658" endtime="20220630 11:19:44.659"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.641" endtime="20220630 11:19:44.659"/>
</iter>
<iter>
<var name="${index}">15</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.675" level="INFO">${brand_name} = ASUS</msg>
<status status="PASS" starttime="20220630 11:19:44.659" endtime="20220630 11:19:44.675"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.676" level="INFO">${upper_text} = ASUS</msg>
<status status="PASS" starttime="20220630 11:19:44.675" endtime="20220630 11:19:44.676"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.676" endtime="20220630 11:19:44.676"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.659" endtime="20220630 11:19:44.677"/>
</iter>
<iter>
<var name="${index}">16</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.693" level="INFO">${brand_name} = Aula</msg>
<status status="PASS" starttime="20220630 11:19:44.677" endtime="20220630 11:19:44.693"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.693" level="INFO">${upper_text} = AULA</msg>
<status status="PASS" starttime="20220630 11:19:44.693" endtime="20220630 11:19:44.694"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.694" endtime="20220630 11:19:44.694"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.677" endtime="20220630 11:19:44.694"/>
</iter>
<status status="PASS" starttime="20220630 11:19:44.370" endtime="20220630 11:19:44.694"/>
</for>
<status status="PASS" starttime="20220630 11:19:44.339" endtime="20220630 11:19:44.694"/>
</branch>
<status status="PASS" starttime="20220630 11:19:44.338" endtime="20220630 11:19:44.694"/>
</if>
<status status="PASS" starttime="20220630 11:19:44.335" endtime="20220630 11:19:44.695"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.126" endtime="20220630 11:19:44.695"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:44.695" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][2]</msg>
<status status="PASS" starttime="20220630 11:19:44.695" endtime="20220630 11:19:44.695"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.726" level="INFO">${alphabet} = B</msg>
<status status="PASS" starttime="20220630 11:19:44.696" endtime="20220630 11:19:44.726"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.727" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][2]'.</msg>
<status status="PASS" starttime="20220630 11:19:44.727" endtime="20220630 11:19:44.855"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:44.857" level="INFO">${check_alphabet} = ['B']</msg>
<status status="PASS" starttime="20220630 11:19:44.857" endtime="20220630 11:19:44.857"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:44.858" level="INFO">${chars} = B</msg>
<status status="PASS" starttime="20220630 11:19:44.857" endtime="20220630 11:19:44.858"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:44.862" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'B')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:44.861" endtime="20220630 11:19:44.862"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:44.919" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="f6e3fe6f-f897-46c3-85ae-fabac7f6d292")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:44.862" endtime="20220630 11:19:44.919"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:44.920" level="INFO">Length is 8</msg>
<msg timestamp="20220630 11:19:44.920" level="INFO">${brand_list_length} = 8</msg>
<status status="PASS" starttime="20220630 11:19:44.919" endtime="20220630 11:19:44.920"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:44.965" level="INFO">${brand_name} = Belkin</msg>
<status status="PASS" starttime="20220630 11:19:44.921" endtime="20220630 11:19:44.965"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:44.966" level="INFO">${upper_text} = BELKIN</msg>
<status status="PASS" starttime="20220630 11:19:44.966" endtime="20220630 11:19:44.967"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:44.967" endtime="20220630 11:19:44.968"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.921" endtime="20220630 11:19:44.968"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.021" level="INFO">${brand_name} = BenQ</msg>
<status status="PASS" starttime="20220630 11:19:44.969" endtime="20220630 11:19:45.021"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.022" level="INFO">${upper_text} = BENQ</msg>
<status status="PASS" starttime="20220630 11:19:45.021" endtime="20220630 11:19:45.022"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.023" endtime="20220630 11:19:45.024"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.969" endtime="20220630 11:19:45.024"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.058" level="INFO">${brand_name} = Bitdefenderthailand</msg>
<status status="PASS" starttime="20220630 11:19:45.024" endtime="20220630 11:19:45.058"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.060" level="INFO">${upper_text} = BITDEFENDERTHAILAND</msg>
<status status="PASS" starttime="20220630 11:19:45.059" endtime="20220630 11:19:45.060"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.060" endtime="20220630 11:19:45.061"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.024" endtime="20220630 11:19:45.061"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.091" level="INFO">${brand_name} = Blue Shop</msg>
<status status="PASS" starttime="20220630 11:19:45.062" endtime="20220630 11:19:45.091"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.092" level="INFO">${upper_text} = BLUE SHOP</msg>
<status status="PASS" starttime="20220630 11:19:45.091" endtime="20220630 11:19:45.092"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.092" endtime="20220630 11:19:45.093"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.062" endtime="20220630 11:19:45.093"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.117" level="INFO">${brand_name} = Bmax</msg>
<status status="PASS" starttime="20220630 11:19:45.093" endtime="20220630 11:19:45.117"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.118" level="INFO">${upper_text} = BMAX</msg>
<status status="PASS" starttime="20220630 11:19:45.117" endtime="20220630 11:19:45.118"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.119" endtime="20220630 11:19:45.119"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.093" endtime="20220630 11:19:45.119"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.139" level="INFO">${brand_name} = brother</msg>
<status status="PASS" starttime="20220630 11:19:45.120" endtime="20220630 11:19:45.140"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.141" level="INFO">${upper_text} = BROTHER</msg>
<status status="PASS" starttime="20220630 11:19:45.140" endtime="20220630 11:19:45.141"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.141" endtime="20220630 11:19:45.142"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.120" endtime="20220630 11:19:45.142"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.163" level="INFO">${brand_name} = Bullguard</msg>
<status status="PASS" starttime="20220630 11:19:45.142" endtime="20220630 11:19:45.163"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.164" level="INFO">${upper_text} = BULLGUARD</msg>
<status status="PASS" starttime="20220630 11:19:45.163" endtime="20220630 11:19:45.164"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.164" endtime="20220630 11:19:45.165"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.142" endtime="20220630 11:19:45.165"/>
</iter>
<status status="PASS" starttime="20220630 11:19:44.920" endtime="20220630 11:19:45.165"/>
</for>
<status status="PASS" starttime="20220630 11:19:44.860" endtime="20220630 11:19:45.165"/>
</branch>
<status status="PASS" starttime="20220630 11:19:44.858" endtime="20220630 11:19:45.165"/>
</if>
<status status="PASS" starttime="20220630 11:19:44.856" endtime="20220630 11:19:45.165"/>
</kw>
<status status="PASS" starttime="20220630 11:19:44.695" endtime="20220630 11:19:45.165"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:45.166" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][3]</msg>
<status status="PASS" starttime="20220630 11:19:45.166" endtime="20220630 11:19:45.166"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.200" level="INFO">${alphabet} = C</msg>
<status status="PASS" starttime="20220630 11:19:45.166" endtime="20220630 11:19:45.200"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.201" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][3]'.</msg>
<status status="PASS" starttime="20220630 11:19:45.200" endtime="20220630 11:19:45.340"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:45.342" level="INFO">${check_alphabet} = ['C']</msg>
<status status="PASS" starttime="20220630 11:19:45.341" endtime="20220630 11:19:45.342"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:45.344" level="INFO">${chars} = C</msg>
<status status="PASS" starttime="20220630 11:19:45.343" endtime="20220630 11:19:45.344"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:45.346" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'C')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:45.346" endtime="20220630 11:19:45.346"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:45.375" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="a9f6842b-86c0-4721-889f-5baba3eef1cc")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:45.347" endtime="20220630 11:19:45.375"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:45.376" level="INFO">Length is 5</msg>
<msg timestamp="20220630 11:19:45.377" level="INFO">${brand_list_length} = 5</msg>
<status status="PASS" starttime="20220630 11:19:45.376" endtime="20220630 11:19:45.377"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.418" level="INFO">${brand_name} = Cheetah Talk</msg>
<status status="PASS" starttime="20220630 11:19:45.378" endtime="20220630 11:19:45.418"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.419" level="INFO">${upper_text} = CHEETAH TALK</msg>
<status status="PASS" starttime="20220630 11:19:45.419" endtime="20220630 11:19:45.419"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.420" endtime="20220630 11:19:45.421"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.378" endtime="20220630 11:19:45.421"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.447" level="INFO">${brand_name} = Cooler Master</msg>
<status status="PASS" starttime="20220630 11:19:45.422" endtime="20220630 11:19:45.447"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.448" level="INFO">${upper_text} = COOLER MASTER</msg>
<status status="PASS" starttime="20220630 11:19:45.447" endtime="20220630 11:19:45.448"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.449" endtime="20220630 11:19:45.449"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.421" endtime="20220630 11:19:45.449"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.469" level="INFO">${brand_name} = COUGAR</msg>
<status status="PASS" starttime="20220630 11:19:45.450" endtime="20220630 11:19:45.469"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.470" level="INFO">${upper_text} = COUGAR</msg>
<status status="PASS" starttime="20220630 11:19:45.470" endtime="20220630 11:19:45.470"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.471" endtime="20220630 11:19:45.471"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.449" endtime="20220630 11:19:45.472"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.490" level="INFO">${brand_name} = Creality 3D</msg>
<status status="PASS" starttime="20220630 11:19:45.472" endtime="20220630 11:19:45.490"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.491" level="INFO">${upper_text} = CREALITY 3D</msg>
<status status="PASS" starttime="20220630 11:19:45.490" endtime="20220630 11:19:45.491"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.491" endtime="20220630 11:19:45.492"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.472" endtime="20220630 11:19:45.492"/>
</iter>
<status status="PASS" starttime="20220630 11:19:45.377" endtime="20220630 11:19:45.492"/>
</for>
<status status="PASS" starttime="20220630 11:19:45.345" endtime="20220630 11:19:45.492"/>
</branch>
<status status="PASS" starttime="20220630 11:19:45.344" endtime="20220630 11:19:45.493"/>
</if>
<status status="PASS" starttime="20220630 11:19:45.340" endtime="20220630 11:19:45.493"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.165" endtime="20220630 11:19:45.493"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:45.494" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][4]</msg>
<status status="PASS" starttime="20220630 11:19:45.494" endtime="20220630 11:19:45.494"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.527" level="INFO">${alphabet} = D</msg>
<status status="PASS" starttime="20220630 11:19:45.495" endtime="20220630 11:19:45.527"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.528" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][4]'.</msg>
<status status="PASS" starttime="20220630 11:19:45.527" endtime="20220630 11:19:45.647"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:45.649" level="INFO">${check_alphabet} = ['D']</msg>
<status status="PASS" starttime="20220630 11:19:45.648" endtime="20220630 11:19:45.650"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:45.652" level="INFO">${chars} = D</msg>
<status status="PASS" starttime="20220630 11:19:45.650" endtime="20220630 11:19:45.652"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:45.655" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'D')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:45.654" endtime="20220630 11:19:45.655"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:45.684" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="e434db87-4c18-45b8-891f-b3ad0ecffda1")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:45.655" endtime="20220630 11:19:45.684"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:45.685" level="INFO">Length is 6</msg>
<msg timestamp="20220630 11:19:45.685" level="INFO">${brand_list_length} = 6</msg>
<status status="PASS" starttime="20220630 11:19:45.684" endtime="20220630 11:19:45.685"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.710" level="INFO">${brand_name} = Dahua Monitor and Storage</msg>
<status status="PASS" starttime="20220630 11:19:45.687" endtime="20220630 11:19:45.710"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.711" level="INFO">${upper_text} = DAHUA MONITOR AND STORAGE</msg>
<status status="PASS" starttime="20220630 11:19:45.711" endtime="20220630 11:19:45.711"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.711" endtime="20220630 11:19:45.712"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.686" endtime="20220630 11:19:45.713"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.732" level="INFO">${brand_name} = DATA POWER</msg>
<status status="PASS" starttime="20220630 11:19:45.713" endtime="20220630 11:19:45.732"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.732" level="INFO">${upper_text} = DATA POWER</msg>
<status status="PASS" starttime="20220630 11:19:45.732" endtime="20220630 11:19:45.733"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.733" endtime="20220630 11:19:45.733"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.713" endtime="20220630 11:19:45.733"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.752" level="INFO">${brand_name} = Dell</msg>
<status status="PASS" starttime="20220630 11:19:45.734" endtime="20220630 11:19:45.752"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.753" level="INFO">${upper_text} = DELL</msg>
<status status="PASS" starttime="20220630 11:19:45.752" endtime="20220630 11:19:45.753"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.753" endtime="20220630 11:19:45.753"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.733" endtime="20220630 11:19:45.754"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.771" level="INFO">${brand_name} = Devas Natural</msg>
<status status="PASS" starttime="20220630 11:19:45.754" endtime="20220630 11:19:45.771"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.772" level="INFO">${upper_text} = DEVAS NATURAL</msg>
<status status="PASS" starttime="20220630 11:19:45.771" endtime="20220630 11:19:45.772"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.772" endtime="20220630 11:19:45.772"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.754" endtime="20220630 11:19:45.772"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.791" level="INFO">${brand_name} = DX Racer</msg>
<status status="PASS" starttime="20220630 11:19:45.773" endtime="20220630 11:19:45.791"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:45.791" level="INFO">${upper_text} = DX RACER</msg>
<status status="PASS" starttime="20220630 11:19:45.791" endtime="20220630 11:19:45.791"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:45.792" endtime="20220630 11:19:45.792"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.772" endtime="20220630 11:19:45.792"/>
</iter>
<status status="PASS" starttime="20220630 11:19:45.685" endtime="20220630 11:19:45.792"/>
</for>
<status status="PASS" starttime="20220630 11:19:45.654" endtime="20220630 11:19:45.792"/>
</branch>
<status status="PASS" starttime="20220630 11:19:45.652" endtime="20220630 11:19:45.792"/>
</if>
<status status="PASS" starttime="20220630 11:19:45.647" endtime="20220630 11:19:45.793"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.493" endtime="20220630 11:19:45.793"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:45.794" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][5]</msg>
<status status="PASS" starttime="20220630 11:19:45.793" endtime="20220630 11:19:45.794"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.830" level="INFO">${alphabet} = E</msg>
<status status="PASS" starttime="20220630 11:19:45.794" endtime="20220630 11:19:45.830"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:45.831" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][5]'.</msg>
<status status="PASS" starttime="20220630 11:19:45.830" endtime="20220630 11:19:45.948"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:45.951" level="INFO">${check_alphabet} = ['E']</msg>
<status status="PASS" starttime="20220630 11:19:45.950" endtime="20220630 11:19:45.951"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:45.954" level="INFO">${chars} = E</msg>
<status status="PASS" starttime="20220630 11:19:45.952" endtime="20220630 11:19:45.954"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:45.956" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'E')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:45.956" endtime="20220630 11:19:45.956"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:46.025" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="804e8288-6ae2-4719-9a82-87f1f29f1b83")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:45.957" endtime="20220630 11:19:46.025"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:46.026" level="INFO">Length is 7</msg>
<msg timestamp="20220630 11:19:46.026" level="INFO">${brand_list_length} = 7</msg>
<status status="PASS" starttime="20220630 11:19:46.025" endtime="20220630 11:19:46.026"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.100" level="INFO">${brand_name} = ELECTRONICS BY SHOPEE</msg>
<status status="PASS" starttime="20220630 11:19:46.027" endtime="20220630 11:19:46.100"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.101" level="INFO">${upper_text} = ELECTRONICS BY SHOPEE</msg>
<status status="PASS" starttime="20220630 11:19:46.100" endtime="20220630 11:19:46.101"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.102" endtime="20220630 11:19:46.103"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.027" endtime="20220630 11:19:46.103"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.124" level="INFO">${brand_name} = Energy Wave</msg>
<status status="PASS" starttime="20220630 11:19:46.104" endtime="20220630 11:19:46.125"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.126" level="INFO">${upper_text} = ENERGY WAVE</msg>
<status status="PASS" starttime="20220630 11:19:46.125" endtime="20220630 11:19:46.126"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.126" endtime="20220630 11:19:46.127"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.103" endtime="20220630 11:19:46.127"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.147" level="INFO">${brand_name} = Enermax</msg>
<status status="PASS" starttime="20220630 11:19:46.128" endtime="20220630 11:19:46.147"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.147" level="INFO">${upper_text} = ENERMAX</msg>
<status status="PASS" starttime="20220630 11:19:46.147" endtime="20220630 11:19:46.148"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.148" endtime="20220630 11:19:46.149"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.127" endtime="20220630 11:19:46.149"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.171" level="INFO">${brand_name} = EPOS</msg>
<status status="PASS" starttime="20220630 11:19:46.149" endtime="20220630 11:19:46.171"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.172" level="INFO">${upper_text} = EPOS</msg>
<status status="PASS" starttime="20220630 11:19:46.171" endtime="20220630 11:19:46.172"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.173" endtime="20220630 11:19:46.173"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.149" endtime="20220630 11:19:46.173"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.192" level="INFO">${brand_name} = EPSON</msg>
<status status="PASS" starttime="20220630 11:19:46.174" endtime="20220630 11:19:46.192"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.193" level="INFO">${upper_text} = EPSON</msg>
<status status="PASS" starttime="20220630 11:19:46.193" endtime="20220630 11:19:46.193"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.194" endtime="20220630 11:19:46.194"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.174" endtime="20220630 11:19:46.194"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.214" level="INFO">${brand_name} = ESET</msg>
<status status="PASS" starttime="20220630 11:19:46.194" endtime="20220630 11:19:46.214"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.215" level="INFO">${upper_text} = ESET</msg>
<status status="PASS" starttime="20220630 11:19:46.214" endtime="20220630 11:19:46.215"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.215" endtime="20220630 11:19:46.216"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.194" endtime="20220630 11:19:46.216"/>
</iter>
<status status="PASS" starttime="20220630 11:19:46.026" endtime="20220630 11:19:46.216"/>
</for>
<status status="PASS" starttime="20220630 11:19:45.955" endtime="20220630 11:19:46.216"/>
</branch>
<status status="PASS" starttime="20220630 11:19:45.954" endtime="20220630 11:19:46.216"/>
</if>
<status status="PASS" starttime="20220630 11:19:45.949" endtime="20220630 11:19:46.216"/>
</kw>
<status status="PASS" starttime="20220630 11:19:45.793" endtime="20220630 11:19:46.216"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:46.217" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][6]</msg>
<status status="PASS" starttime="20220630 11:19:46.217" endtime="20220630 11:19:46.217"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.252" level="INFO">${alphabet} = F</msg>
<status status="PASS" starttime="20220630 11:19:46.218" endtime="20220630 11:19:46.252"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.253" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][6]'.</msg>
<status status="PASS" starttime="20220630 11:19:46.253" endtime="20220630 11:19:46.377"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:46.379" level="INFO">${check_alphabet} = ['F']</msg>
<status status="PASS" starttime="20220630 11:19:46.379" endtime="20220630 11:19:46.379"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:46.381" level="INFO">${chars} = F</msg>
<status status="PASS" starttime="20220630 11:19:46.380" endtime="20220630 11:19:46.381"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:46.384" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'F')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:46.384" endtime="20220630 11:19:46.384"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:46.422" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="8885d0b3-7222-4d60-8bc7-80547c7f1f84")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:46.385" endtime="20220630 11:19:46.422"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:46.423" level="INFO">Length is 3</msg>
<msg timestamp="20220630 11:19:46.423" level="INFO">${brand_list_length} = 3</msg>
<status status="PASS" starttime="20220630 11:19:46.422" endtime="20220630 11:19:46.424"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.459" level="INFO">${brand_name} = Flash Express</msg>
<status status="PASS" starttime="20220630 11:19:46.425" endtime="20220630 11:19:46.459"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.461" level="INFO">${upper_text} = FLASH EXPRESS</msg>
<status status="PASS" starttime="20220630 11:19:46.459" endtime="20220630 11:19:46.461"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.461" endtime="20220630 11:19:46.462"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.425" endtime="20220630 11:19:46.462"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.495" level="INFO">${brand_name} = Flexispot</msg>
<status status="PASS" starttime="20220630 11:19:46.463" endtime="20220630 11:19:46.496"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.497" level="INFO">${upper_text} = FLEXISPOT</msg>
<status status="PASS" starttime="20220630 11:19:46.496" endtime="20220630 11:19:46.497"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.498" endtime="20220630 11:19:46.499"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.463" endtime="20220630 11:19:46.499"/>
</iter>
<status status="PASS" starttime="20220630 11:19:46.424" endtime="20220630 11:19:46.499"/>
</for>
<status status="PASS" starttime="20220630 11:19:46.383" endtime="20220630 11:19:46.499"/>
</branch>
<status status="PASS" starttime="20220630 11:19:46.381" endtime="20220630 11:19:46.499"/>
</if>
<status status="PASS" starttime="20220630 11:19:46.377" endtime="20220630 11:19:46.500"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.217" endtime="20220630 11:19:46.500"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:46.501" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][7]</msg>
<status status="PASS" starttime="20220630 11:19:46.500" endtime="20220630 11:19:46.501"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.546" level="INFO">${alphabet} = G</msg>
<status status="PASS" starttime="20220630 11:19:46.502" endtime="20220630 11:19:46.546"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.547" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][7]'.</msg>
<status status="PASS" starttime="20220630 11:19:46.546" endtime="20220630 11:19:46.670"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:46.673" level="INFO">${check_alphabet} = ['G']</msg>
<status status="PASS" starttime="20220630 11:19:46.672" endtime="20220630 11:19:46.673"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:46.674" level="INFO">${chars} = G</msg>
<status status="PASS" starttime="20220630 11:19:46.673" endtime="20220630 11:19:46.674"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:46.677" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'G')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:46.676" endtime="20220630 11:19:46.677"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:46.702" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="7e9d431f-1013-40e5-8bae-5e786ba89541")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:46.677" endtime="20220630 11:19:46.702"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:46.703" level="INFO">Length is 11</msg>
<msg timestamp="20220630 11:19:46.704" level="INFO">${brand_list_length} = 11</msg>
<status status="PASS" starttime="20220630 11:19:46.703" endtime="20220630 11:19:46.704"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.725" level="INFO">${brand_name} = Gadonx</msg>
<status status="PASS" starttime="20220630 11:19:46.705" endtime="20220630 11:19:46.725"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.725" level="INFO">${upper_text} = GADONX</msg>
<status status="PASS" starttime="20220630 11:19:46.725" endtime="20220630 11:19:46.725"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.725" endtime="20220630 11:19:46.726"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.704" endtime="20220630 11:19:46.726"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.744" level="INFO">${brand_name} = GALAX</msg>
<status status="PASS" starttime="20220630 11:19:46.726" endtime="20220630 11:19:46.744"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.745" level="INFO">${upper_text} = GALAX</msg>
<status status="PASS" starttime="20220630 11:19:46.745" endtime="20220630 11:19:46.745"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.745" endtime="20220630 11:19:46.746"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.726" endtime="20220630 11:19:46.746"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.765" level="INFO">${brand_name} = GameSir</msg>
<status status="PASS" starttime="20220630 11:19:46.746" endtime="20220630 11:19:46.765"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.765" level="INFO">${upper_text} = GAMESIR</msg>
<status status="PASS" starttime="20220630 11:19:46.765" endtime="20220630 11:19:46.765"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.765" endtime="20220630 11:19:46.766"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.746" endtime="20220630 11:19:46.766"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.788" level="INFO">${brand_name} = Gaming Planet</msg>
<status status="PASS" starttime="20220630 11:19:46.766" endtime="20220630 11:19:46.788"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.789" level="INFO">${upper_text} = GAMING PLANET</msg>
<status status="PASS" starttime="20220630 11:19:46.788" endtime="20220630 11:19:46.789"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.789" endtime="20220630 11:19:46.790"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.766" endtime="20220630 11:19:46.790"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.807" level="INFO">${brand_name} = GHz Store</msg>
<status status="PASS" starttime="20220630 11:19:46.791" endtime="20220630 11:19:46.807"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.807" level="INFO">${upper_text} = GHZ STORE</msg>
<status status="PASS" starttime="20220630 11:19:46.807" endtime="20220630 11:19:46.808"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.808" endtime="20220630 11:19:46.808"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.790" endtime="20220630 11:19:46.808"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.824" level="INFO">${brand_name} = GIGABYTE</msg>
<status status="PASS" starttime="20220630 11:19:46.808" endtime="20220630 11:19:46.824"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.825" level="INFO">${upper_text} = GIGABYTE</msg>
<status status="PASS" starttime="20220630 11:19:46.824" endtime="20220630 11:19:46.825"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.825" endtime="20220630 11:19:46.825"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.808" endtime="20220630 11:19:46.825"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.841" level="INFO">${brand_name} = Glink</msg>
<status status="PASS" starttime="20220630 11:19:46.826" endtime="20220630 11:19:46.841"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.842" level="INFO">${upper_text} = GLINK</msg>
<status status="PASS" starttime="20220630 11:19:46.842" endtime="20220630 11:19:46.842"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.842" endtime="20220630 11:19:46.843"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.825" endtime="20220630 11:19:46.843"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.858" level="INFO">${brand_name} = Glorious</msg>
<status status="PASS" starttime="20220630 11:19:46.843" endtime="20220630 11:19:46.858"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.858" level="INFO">${upper_text} = GLORIOUS</msg>
<status status="PASS" starttime="20220630 11:19:46.858" endtime="20220630 11:19:46.858"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.859" endtime="20220630 11:19:46.859"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.843" endtime="20220630 11:19:46.859"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.883" level="INFO">${brand_name} = GMS Corporation</msg>
<status status="PASS" starttime="20220630 11:19:46.859" endtime="20220630 11:19:46.883"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.883" level="INFO">${upper_text} = GMS CORPORATION</msg>
<status status="PASS" starttime="20220630 11:19:46.883" endtime="20220630 11:19:46.883"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.884" endtime="20220630 11:19:46.884"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.859" endtime="20220630 11:19:46.884"/>
</iter>
<iter>
<var name="${index}">10</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.900" level="INFO">${brand_name} = Gview</msg>
<status status="PASS" starttime="20220630 11:19:46.884" endtime="20220630 11:19:46.900"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:46.900" level="INFO">${upper_text} = GVIEW</msg>
<status status="PASS" starttime="20220630 11:19:46.900" endtime="20220630 11:19:46.900"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:46.900" endtime="20220630 11:19:46.901"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.884" endtime="20220630 11:19:46.901"/>
</iter>
<status status="PASS" starttime="20220630 11:19:46.704" endtime="20220630 11:19:46.901"/>
</for>
<status status="PASS" starttime="20220630 11:19:46.676" endtime="20220630 11:19:46.901"/>
</branch>
<status status="PASS" starttime="20220630 11:19:46.674" endtime="20220630 11:19:46.901"/>
</if>
<status status="PASS" starttime="20220630 11:19:46.671" endtime="20220630 11:19:46.901"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.500" endtime="20220630 11:19:46.901"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:46.902" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][8]</msg>
<status status="PASS" starttime="20220630 11:19:46.902" endtime="20220630 11:19:46.902"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.936" level="INFO">${alphabet} = H</msg>
<status status="PASS" starttime="20220630 11:19:46.902" endtime="20220630 11:19:46.936"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:46.937" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][8]'.</msg>
<status status="PASS" starttime="20220630 11:19:46.937" endtime="20220630 11:19:47.036"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:47.039" level="INFO">${check_alphabet} = ['H']</msg>
<status status="PASS" starttime="20220630 11:19:47.038" endtime="20220630 11:19:47.039"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:47.040" level="INFO">${chars} = H</msg>
<status status="PASS" starttime="20220630 11:19:47.039" endtime="20220630 11:19:47.040"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:47.044" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'H')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:47.043" endtime="20220630 11:19:47.045"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:47.084" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="3c88eea2-fde7-4651-8313-f5871b8e5598")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:47.045" endtime="20220630 11:19:47.084"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:47.085" level="INFO">Length is 6</msg>
<msg timestamp="20220630 11:19:47.086" level="INFO">${brand_list_length} = 6</msg>
<status status="PASS" starttime="20220630 11:19:47.085" endtime="20220630 11:19:47.086"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.116" level="INFO">${brand_name} = Hi Jet</msg>
<status status="PASS" starttime="20220630 11:19:47.087" endtime="20220630 11:19:47.116"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.117" level="INFO">${upper_text} = HI JET</msg>
<status status="PASS" starttime="20220630 11:19:47.117" endtime="20220630 11:19:47.117"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.118" endtime="20220630 11:19:47.118"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.086" endtime="20220630 11:19:47.119"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.141" level="INFO">${brand_name} = HP</msg>
<status status="PASS" starttime="20220630 11:19:47.119" endtime="20220630 11:19:47.141"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.142" level="INFO">${upper_text} = HP</msg>
<status status="PASS" starttime="20220630 11:19:47.142" endtime="20220630 11:19:47.142"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.142" endtime="20220630 11:19:47.143"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.119" endtime="20220630 11:19:47.143"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.158" level="INFO">${brand_name} = Huawei</msg>
<status status="PASS" starttime="20220630 11:19:47.143" endtime="20220630 11:19:47.158"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.159" level="INFO">${upper_text} = HUAWEI</msg>
<status status="PASS" starttime="20220630 11:19:47.158" endtime="20220630 11:19:47.159"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.159" endtime="20220630 11:19:47.159"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.143" endtime="20220630 11:19:47.159"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.176" level="INFO">${brand_name} = Hyper Official Store</msg>
<status status="PASS" starttime="20220630 11:19:47.159" endtime="20220630 11:19:47.176"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.176" level="INFO">${upper_text} = HYPER OFFICIAL STORE</msg>
<status status="PASS" starttime="20220630 11:19:47.176" endtime="20220630 11:19:47.176"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.177" endtime="20220630 11:19:47.177"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.159" endtime="20220630 11:19:47.177"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.193" level="INFO">${brand_name} = HyperX</msg>
<status status="PASS" starttime="20220630 11:19:47.177" endtime="20220630 11:19:47.193"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.193" level="INFO">${upper_text} = HYPERX</msg>
<status status="PASS" starttime="20220630 11:19:47.193" endtime="20220630 11:19:47.193"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.194" endtime="20220630 11:19:47.194"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.177" endtime="20220630 11:19:47.194"/>
</iter>
<status status="PASS" starttime="20220630 11:19:47.086" endtime="20220630 11:19:47.194"/>
</for>
<status status="PASS" starttime="20220630 11:19:47.043" endtime="20220630 11:19:47.194"/>
</branch>
<status status="PASS" starttime="20220630 11:19:47.041" endtime="20220630 11:19:47.194"/>
</if>
<status status="PASS" starttime="20220630 11:19:47.036" endtime="20220630 11:19:47.194"/>
</kw>
<status status="PASS" starttime="20220630 11:19:46.901" endtime="20220630 11:19:47.194"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:47.195" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][9]</msg>
<status status="PASS" starttime="20220630 11:19:47.195" endtime="20220630 11:19:47.195"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.223" level="INFO">${alphabet} = I</msg>
<status status="PASS" starttime="20220630 11:19:47.195" endtime="20220630 11:19:47.223"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.224" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][9]'.</msg>
<status status="PASS" starttime="20220630 11:19:47.224" endtime="20220630 11:19:47.327"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:47.329" level="INFO">${check_alphabet} = ['I']</msg>
<status status="PASS" starttime="20220630 11:19:47.329" endtime="20220630 11:19:47.330"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:47.331" level="INFO">${chars} = I</msg>
<status status="PASS" starttime="20220630 11:19:47.330" endtime="20220630 11:19:47.331"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:47.334" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'I')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:47.333" endtime="20220630 11:19:47.334"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:47.360" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="089c6e48-3889-44a5-a1ad-1f770fb09673")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:47.334" endtime="20220630 11:19:47.361"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:47.361" level="INFO">Length is 4</msg>
<msg timestamp="20220630 11:19:47.362" level="INFO">${brand_list_length} = 4</msg>
<status status="PASS" starttime="20220630 11:19:47.361" endtime="20220630 11:19:47.362"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.396" level="INFO">${brand_name} = iDragon</msg>
<status status="PASS" starttime="20220630 11:19:47.363" endtime="20220630 11:19:47.397"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.398" level="INFO">${upper_text} = IDRAGON</msg>
<status status="PASS" starttime="20220630 11:19:47.397" endtime="20220630 11:19:47.398"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.398" endtime="20220630 11:19:47.399"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.362" endtime="20220630 11:19:47.399"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.433" level="INFO">${brand_name} = imin</msg>
<status status="PASS" starttime="20220630 11:19:47.400" endtime="20220630 11:19:47.433"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.434" level="INFO">${upper_text} = IMIN</msg>
<status status="PASS" starttime="20220630 11:19:47.433" endtime="20220630 11:19:47.434"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.435" endtime="20220630 11:19:47.435"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.399" endtime="20220630 11:19:47.436"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.467" level="INFO">${brand_name} = IT City</msg>
<status status="PASS" starttime="20220630 11:19:47.436" endtime="20220630 11:19:47.467"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.468" level="INFO">${upper_text} = IT CITY</msg>
<status status="PASS" starttime="20220630 11:19:47.467" endtime="20220630 11:19:47.468"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.468" endtime="20220630 11:19:47.469"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.436" endtime="20220630 11:19:47.469"/>
</iter>
<status status="PASS" starttime="20220630 11:19:47.362" endtime="20220630 11:19:47.469"/>
</for>
<status status="PASS" starttime="20220630 11:19:47.333" endtime="20220630 11:19:47.469"/>
</branch>
<status status="PASS" starttime="20220630 11:19:47.331" endtime="20220630 11:19:47.469"/>
</if>
<status status="PASS" starttime="20220630 11:19:47.328" endtime="20220630 11:19:47.470"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.195" endtime="20220630 11:19:47.470"/>
</iter>
<iter>
<var name="${index}">10</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:47.471" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][10]</msg>
<status status="PASS" starttime="20220630 11:19:47.470" endtime="20220630 11:19:47.471"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.503" level="INFO">${alphabet} = J</msg>
<status status="PASS" starttime="20220630 11:19:47.471" endtime="20220630 11:19:47.503"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.504" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][10]'.</msg>
<status status="PASS" starttime="20220630 11:19:47.504" endtime="20220630 11:19:47.597"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:47.599" level="INFO">${check_alphabet} = ['J']</msg>
<status status="PASS" starttime="20220630 11:19:47.598" endtime="20220630 11:19:47.599"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:47.600" level="INFO">${chars} = J</msg>
<status status="PASS" starttime="20220630 11:19:47.599" endtime="20220630 11:19:47.600"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:47.602" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'J')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:47.601" endtime="20220630 11:19:47.602"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:47.629" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="d89637aa-03bc-4b0c-8bf7-202defe751ba")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:47.602" endtime="20220630 11:19:47.629"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:47.630" level="INFO">Length is 3</msg>
<msg timestamp="20220630 11:19:47.630" level="INFO">${brand_list_length} = 3</msg>
<status status="PASS" starttime="20220630 11:19:47.629" endtime="20220630 11:19:47.630"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.656" level="INFO">${brand_name} = JEDICOOL</msg>
<status status="PASS" starttime="20220630 11:19:47.631" endtime="20220630 11:19:47.656"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.657" level="INFO">${upper_text} = JEDICOOL</msg>
<status status="PASS" starttime="20220630 11:19:47.656" endtime="20220630 11:19:47.657"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.657" endtime="20220630 11:19:47.658"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.630" endtime="20220630 11:19:47.658"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.675" level="INFO">${brand_name} = JIB</msg>
<status status="PASS" starttime="20220630 11:19:47.658" endtime="20220630 11:19:47.675"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.675" level="INFO">${upper_text} = JIB</msg>
<status status="PASS" starttime="20220630 11:19:47.675" endtime="20220630 11:19:47.675"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.676" endtime="20220630 11:19:47.676"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.658" endtime="20220630 11:19:47.676"/>
</iter>
<status status="PASS" starttime="20220630 11:19:47.630" endtime="20220630 11:19:47.676"/>
</for>
<status status="PASS" starttime="20220630 11:19:47.601" endtime="20220630 11:19:47.676"/>
</branch>
<status status="PASS" starttime="20220630 11:19:47.600" endtime="20220630 11:19:47.676"/>
</if>
<status status="PASS" starttime="20220630 11:19:47.597" endtime="20220630 11:19:47.676"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.470" endtime="20220630 11:19:47.676"/>
</iter>
<iter>
<var name="${index}">11</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:47.677" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][11]</msg>
<status status="PASS" starttime="20220630 11:19:47.677" endtime="20220630 11:19:47.677"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.721" level="INFO">${alphabet} = K</msg>
<status status="PASS" starttime="20220630 11:19:47.677" endtime="20220630 11:19:47.722"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.722" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][11]'.</msg>
<status status="PASS" starttime="20220630 11:19:47.722" endtime="20220630 11:19:47.820"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:47.822" level="INFO">${check_alphabet} = ['K']</msg>
<status status="PASS" starttime="20220630 11:19:47.822" endtime="20220630 11:19:47.822"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:47.823" level="INFO">${chars} = K</msg>
<status status="PASS" starttime="20220630 11:19:47.823" endtime="20220630 11:19:47.823"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:47.827" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'K')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:47.826" endtime="20220630 11:19:47.827"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:47.854" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="89dd65bf-2fe0-40d2-86cd-b1875cdbb05c")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:47.827" endtime="20220630 11:19:47.854"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:47.855" level="INFO">Length is 4</msg>
<msg timestamp="20220630 11:19:47.855" level="INFO">${brand_list_length} = 4</msg>
<status status="PASS" starttime="20220630 11:19:47.854" endtime="20220630 11:19:47.855"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.882" level="INFO">${brand_name} = kingmax</msg>
<status status="PASS" starttime="20220630 11:19:47.856" endtime="20220630 11:19:47.882"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.883" level="INFO">${upper_text} = KINGMAX</msg>
<status status="PASS" starttime="20220630 11:19:47.882" endtime="20220630 11:19:47.883"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.883" endtime="20220630 11:19:47.884"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.856" endtime="20220630 11:19:47.884"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.901" level="INFO">${brand_name} = Kingston</msg>
<status status="PASS" starttime="20220630 11:19:47.884" endtime="20220630 11:19:47.901"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.901" level="INFO">${upper_text} = KINGSTON</msg>
<status status="PASS" starttime="20220630 11:19:47.901" endtime="20220630 11:19:47.901"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.901" endtime="20220630 11:19:47.902"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.884" endtime="20220630 11:19:47.902"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.934" level="INFO">${brand_name} = Kioxia</msg>
<status status="PASS" starttime="20220630 11:19:47.902" endtime="20220630 11:19:47.934"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:47.935" level="INFO">${upper_text} = KIOXIA</msg>
<status status="PASS" starttime="20220630 11:19:47.935" endtime="20220630 11:19:47.935"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:47.935" endtime="20220630 11:19:47.935"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.902" endtime="20220630 11:19:47.936"/>
</iter>
<status status="PASS" starttime="20220630 11:19:47.855" endtime="20220630 11:19:47.936"/>
</for>
<status status="PASS" starttime="20220630 11:19:47.826" endtime="20220630 11:19:47.936"/>
</branch>
<status status="PASS" starttime="20220630 11:19:47.823" endtime="20220630 11:19:47.936"/>
</if>
<status status="PASS" starttime="20220630 11:19:47.821" endtime="20220630 11:19:47.936"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.677" endtime="20220630 11:19:47.936"/>
</iter>
<iter>
<var name="${index}">12</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:47.937" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][12]</msg>
<status status="PASS" starttime="20220630 11:19:47.936" endtime="20220630 11:19:47.937"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.965" level="INFO">${alphabet} = L</msg>
<status status="PASS" starttime="20220630 11:19:47.937" endtime="20220630 11:19:47.966"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:47.966" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][12]'.</msg>
<status status="PASS" starttime="20220630 11:19:47.966" endtime="20220630 11:19:48.060"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:48.061" level="INFO">${check_alphabet} = ['L']</msg>
<status status="PASS" starttime="20220630 11:19:48.061" endtime="20220630 11:19:48.061"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:48.062" level="INFO">${chars} = L</msg>
<status status="PASS" starttime="20220630 11:19:48.062" endtime="20220630 11:19:48.062"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:48.064" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'L')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:48.063" endtime="20220630 11:19:48.064"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:48.087" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="91930ad4-ca6a-4a24-a773-8ff58b6678d9")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:48.065" endtime="20220630 11:19:48.087"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:48.088" level="INFO">Length is 12</msg>
<msg timestamp="20220630 11:19:48.088" level="INFO">${brand_list_length} = 12</msg>
<status status="PASS" starttime="20220630 11:19:48.087" endtime="20220630 11:19:48.088"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.118" level="INFO">${brand_name} = Leopold</msg>
<status status="PASS" starttime="20220630 11:19:48.089" endtime="20220630 11:19:48.118"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.120" level="INFO">${upper_text} = LEOPOLD</msg>
<status status="PASS" starttime="20220630 11:19:48.119" endtime="20220630 11:19:48.120"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.120" endtime="20220630 11:19:48.121"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.089" endtime="20220630 11:19:48.121"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.149" level="INFO">${brand_name} = Lexar</msg>
<status status="PASS" starttime="20220630 11:19:48.121" endtime="20220630 11:19:48.149"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.149" level="INFO">${upper_text} = LEXAR</msg>
<status status="PASS" starttime="20220630 11:19:48.149" endtime="20220630 11:19:48.149"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.149" endtime="20220630 11:19:48.150"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.121" endtime="20220630 11:19:48.150"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.168" level="INFO">${brand_name} = Lexar</msg>
<status status="PASS" starttime="20220630 11:19:48.150" endtime="20220630 11:19:48.168"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.169" level="INFO">${upper_text} = LEXAR</msg>
<status status="PASS" starttime="20220630 11:19:48.168" endtime="20220630 11:19:48.169"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.169" endtime="20220630 11:19:48.169"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.150" endtime="20220630 11:19:48.169"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.185" level="INFO">${brand_name} = LG IT</msg>
<status status="PASS" starttime="20220630 11:19:48.170" endtime="20220630 11:19:48.185"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.186" level="INFO">${upper_text} = LG IT</msg>
<status status="PASS" starttime="20220630 11:19:48.186" endtime="20220630 11:19:48.186"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.186" endtime="20220630 11:19:48.187"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.169" endtime="20220630 11:19:48.187"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.203" level="INFO">${brand_name} = LINK</msg>
<status status="PASS" starttime="20220630 11:19:48.187" endtime="20220630 11:19:48.203"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.204" level="INFO">${upper_text} = LINK</msg>
<status status="PASS" starttime="20220630 11:19:48.203" endtime="20220630 11:19:48.204"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.204" endtime="20220630 11:19:48.205"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.187" endtime="20220630 11:19:48.205"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.221" level="INFO">${brand_name} = Linksys</msg>
<status status="PASS" starttime="20220630 11:19:48.205" endtime="20220630 11:19:48.221"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.221" level="INFO">${upper_text} = LINKSYS</msg>
<status status="PASS" starttime="20220630 11:19:48.221" endtime="20220630 11:19:48.221"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.221" endtime="20220630 11:19:48.222"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.205" endtime="20220630 11:19:48.222"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.238" level="INFO">${brand_name} = Linksys</msg>
<status status="PASS" starttime="20220630 11:19:48.222" endtime="20220630 11:19:48.238"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.239" level="INFO">${upper_text} = LINKSYS</msg>
<status status="PASS" starttime="20220630 11:19:48.239" endtime="20220630 11:19:48.239"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.239" endtime="20220630 11:19:48.240"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.222" endtime="20220630 11:19:48.240"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.257" level="INFO">${brand_name} = llano</msg>
<status status="PASS" starttime="20220630 11:19:48.240" endtime="20220630 11:19:48.258"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.258" level="INFO">${upper_text} = LLANO</msg>
<status status="PASS" starttime="20220630 11:19:48.258" endtime="20220630 11:19:48.258"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.258" endtime="20220630 11:19:48.259"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.240" endtime="20220630 11:19:48.259"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.279" level="INFO">${brand_name} = logitech</msg>
<status status="PASS" starttime="20220630 11:19:48.259" endtime="20220630 11:19:48.280"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.280" level="INFO">${upper_text} = LOGITECH</msg>
<status status="PASS" starttime="20220630 11:19:48.280" endtime="20220630 11:19:48.280"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.280" endtime="20220630 11:19:48.281"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.259" endtime="20220630 11:19:48.281"/>
</iter>
<iter>
<var name="${index}">10</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.300" level="INFO">${brand_name} = Loyverse</msg>
<status status="PASS" starttime="20220630 11:19:48.281" endtime="20220630 11:19:48.300"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.301" level="INFO">${upper_text} = LOYVERSE</msg>
<status status="PASS" starttime="20220630 11:19:48.300" endtime="20220630 11:19:48.301"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.301" endtime="20220630 11:19:48.302"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.281" endtime="20220630 11:19:48.302"/>
</iter>
<iter>
<var name="${index}">11</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.319" level="INFO">${brand_name} = Lumira</msg>
<status status="PASS" starttime="20220630 11:19:48.303" endtime="20220630 11:19:48.319"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.320" level="INFO">${upper_text} = LUMIRA</msg>
<status status="PASS" starttime="20220630 11:19:48.320" endtime="20220630 11:19:48.320"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.320" endtime="20220630 11:19:48.321"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.302" endtime="20220630 11:19:48.321"/>
</iter>
<status status="PASS" starttime="20220630 11:19:48.088" endtime="20220630 11:19:48.321"/>
</for>
<status status="PASS" starttime="20220630 11:19:48.063" endtime="20220630 11:19:48.321"/>
</branch>
<status status="PASS" starttime="20220630 11:19:48.062" endtime="20220630 11:19:48.321"/>
</if>
<status status="PASS" starttime="20220630 11:19:48.060" endtime="20220630 11:19:48.321"/>
</kw>
<status status="PASS" starttime="20220630 11:19:47.936" endtime="20220630 11:19:48.321"/>
</iter>
<iter>
<var name="${index}">13</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:48.322" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][13]</msg>
<status status="PASS" starttime="20220630 11:19:48.321" endtime="20220630 11:19:48.322"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.351" level="INFO">${alphabet} = M</msg>
<status status="PASS" starttime="20220630 11:19:48.322" endtime="20220630 11:19:48.351"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.351" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][13]'.</msg>
<status status="PASS" starttime="20220630 11:19:48.351" endtime="20220630 11:19:48.447"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:48.448" level="INFO">${check_alphabet} = ['M']</msg>
<status status="PASS" starttime="20220630 11:19:48.448" endtime="20220630 11:19:48.448"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:48.449" level="INFO">${chars} = M</msg>
<status status="PASS" starttime="20220630 11:19:48.449" endtime="20220630 11:19:48.449"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:48.451" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'M')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:48.450" endtime="20220630 11:19:48.451"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:48.480" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="027ccd93-8b1d-4bc2-a5e8-845f4f598edb")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:48.451" endtime="20220630 11:19:48.480"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:48.481" level="INFO">Length is 7</msg>
<msg timestamp="20220630 11:19:48.481" level="INFO">${brand_list_length} = 7</msg>
<status status="PASS" starttime="20220630 11:19:48.481" endtime="20220630 11:19:48.482"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.515" level="INFO">${brand_name} = McAfee</msg>
<status status="PASS" starttime="20220630 11:19:48.483" endtime="20220630 11:19:48.515"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.516" level="INFO">${upper_text} = MCAFEE</msg>
<status status="PASS" starttime="20220630 11:19:48.515" endtime="20220630 11:19:48.516"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.517" endtime="20220630 11:19:48.518"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.482" endtime="20220630 11:19:48.518"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.553" level="INFO">${brand_name} = Micropack</msg>
<status status="PASS" starttime="20220630 11:19:48.518" endtime="20220630 11:19:48.553"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.554" level="INFO">${upper_text} = MICROPACK</msg>
<status status="PASS" starttime="20220630 11:19:48.553" endtime="20220630 11:19:48.554"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.554" endtime="20220630 11:19:48.555"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.518" endtime="20220630 11:19:48.555"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.584" level="INFO">${brand_name} = Microsoft</msg>
<status status="PASS" starttime="20220630 11:19:48.555" endtime="20220630 11:19:48.584"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.585" level="INFO">${upper_text} = MICROSOFT</msg>
<status status="PASS" starttime="20220630 11:19:48.584" endtime="20220630 11:19:48.585"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.585" endtime="20220630 11:19:48.585"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.555" endtime="20220630 11:19:48.585"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.602" level="INFO">${brand_name} = mofiistore</msg>
<status status="PASS" starttime="20220630 11:19:48.585" endtime="20220630 11:19:48.602"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.603" level="INFO">${upper_text} = MOFIISTORE</msg>
<status status="PASS" starttime="20220630 11:19:48.602" endtime="20220630 11:19:48.603"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.603" endtime="20220630 11:19:48.603"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.585" endtime="20220630 11:19:48.603"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.624" level="INFO">${brand_name} = Mountain</msg>
<status status="PASS" starttime="20220630 11:19:48.604" endtime="20220630 11:19:48.624"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.625" level="INFO">${upper_text} = MOUNTAIN</msg>
<status status="PASS" starttime="20220630 11:19:48.624" endtime="20220630 11:19:48.625"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.625" endtime="20220630 11:19:48.626"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.603" endtime="20220630 11:19:48.626"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.643" level="INFO">${brand_name} = MSI</msg>
<status status="PASS" starttime="20220630 11:19:48.626" endtime="20220630 11:19:48.643"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.643" level="INFO">${upper_text} = MSI</msg>
<status status="PASS" starttime="20220630 11:19:48.643" endtime="20220630 11:19:48.643"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.644" endtime="20220630 11:19:48.644"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.626" endtime="20220630 11:19:48.644"/>
</iter>
<status status="PASS" starttime="20220630 11:19:48.482" endtime="20220630 11:19:48.644"/>
</for>
<status status="PASS" starttime="20220630 11:19:48.450" endtime="20220630 11:19:48.644"/>
</branch>
<status status="PASS" starttime="20220630 11:19:48.449" endtime="20220630 11:19:48.644"/>
</if>
<status status="PASS" starttime="20220630 11:19:48.447" endtime="20220630 11:19:48.644"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.321" endtime="20220630 11:19:48.644"/>
</iter>
<iter>
<var name="${index}">14</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:48.645" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][14]</msg>
<status status="PASS" starttime="20220630 11:19:48.645" endtime="20220630 11:19:48.645"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.676" level="INFO">${alphabet} = N</msg>
<status status="PASS" starttime="20220630 11:19:48.645" endtime="20220630 11:19:48.676"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.677" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][14]'.</msg>
<status status="PASS" starttime="20220630 11:19:48.677" endtime="20220630 11:19:48.776"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:48.778" level="INFO">${check_alphabet} = ['N']</msg>
<status status="PASS" starttime="20220630 11:19:48.777" endtime="20220630 11:19:48.778"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:48.780" level="INFO">${chars} = N</msg>
<status status="PASS" starttime="20220630 11:19:48.779" endtime="20220630 11:19:48.780"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:48.782" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'N')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:48.781" endtime="20220630 11:19:48.782"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:48.809" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="4b137054-8abd-4c5d-887b-46f28818b065")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:48.782" endtime="20220630 11:19:48.809"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:48.811" level="INFO">Length is 6</msg>
<msg timestamp="20220630 11:19:48.811" level="INFO">${brand_list_length} = 6</msg>
<status status="PASS" starttime="20220630 11:19:48.810" endtime="20220630 11:19:48.811"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.845" level="INFO">${brand_name} = NETGEAR</msg>
<status status="PASS" starttime="20220630 11:19:48.812" endtime="20220630 11:19:48.845"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.847" level="INFO">${upper_text} = NETGEAR</msg>
<status status="PASS" starttime="20220630 11:19:48.846" endtime="20220630 11:19:48.847"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.847" endtime="20220630 11:19:48.848"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.812" endtime="20220630 11:19:48.848"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.876" level="INFO">${brand_name} = Noblechairs</msg>
<status status="PASS" starttime="20220630 11:19:48.849" endtime="20220630 11:19:48.876"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.877" level="INFO">${upper_text} = NOBLECHAIRS</msg>
<status status="PASS" starttime="20220630 11:19:48.876" endtime="20220630 11:19:48.877"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.877" endtime="20220630 11:19:48.878"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.849" endtime="20220630 11:19:48.878"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.895" level="INFO">${brand_name} = Nubwo</msg>
<status status="PASS" starttime="20220630 11:19:48.879" endtime="20220630 11:19:48.895"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.895" level="INFO">${upper_text} = NUBWO</msg>
<status status="PASS" starttime="20220630 11:19:48.895" endtime="20220630 11:19:48.895"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.895" endtime="20220630 11:19:48.896"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.878" endtime="20220630 11:19:48.896"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.916" level="INFO">${brand_name} = Nvidia</msg>
<status status="PASS" starttime="20220630 11:19:48.896" endtime="20220630 11:19:48.916"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.916" level="INFO">${upper_text} = NVIDIA</msg>
<status status="PASS" starttime="20220630 11:19:48.916" endtime="20220630 11:19:48.917"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.917" endtime="20220630 11:19:48.917"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.896" endtime="20220630 11:19:48.917"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.933" level="INFO">${brand_name} = NZXT</msg>
<status status="PASS" starttime="20220630 11:19:48.917" endtime="20220630 11:19:48.934"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:48.934" level="INFO">${upper_text} = NZXT</msg>
<status status="PASS" starttime="20220630 11:19:48.934" endtime="20220630 11:19:48.934"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:48.934" endtime="20220630 11:19:48.935"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.917" endtime="20220630 11:19:48.935"/>
</iter>
<status status="PASS" starttime="20220630 11:19:48.811" endtime="20220630 11:19:48.935"/>
</for>
<status status="PASS" starttime="20220630 11:19:48.781" endtime="20220630 11:19:48.935"/>
</branch>
<status status="PASS" starttime="20220630 11:19:48.780" endtime="20220630 11:19:48.935"/>
</if>
<status status="PASS" starttime="20220630 11:19:48.776" endtime="20220630 11:19:48.935"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.645" endtime="20220630 11:19:48.935"/>
</iter>
<iter>
<var name="${index}">15</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:48.936" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][15]</msg>
<status status="PASS" starttime="20220630 11:19:48.936" endtime="20220630 11:19:48.936"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.964" level="INFO">${alphabet} = O</msg>
<status status="PASS" starttime="20220630 11:19:48.936" endtime="20220630 11:19:48.964"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:48.965" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][15]'.</msg>
<status status="PASS" starttime="20220630 11:19:48.965" endtime="20220630 11:19:49.070"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:49.072" level="INFO">${check_alphabet} = ['O']</msg>
<status status="PASS" starttime="20220630 11:19:49.071" endtime="20220630 11:19:49.072"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:49.073" level="INFO">${chars} = O</msg>
<status status="PASS" starttime="20220630 11:19:49.072" endtime="20220630 11:19:49.073"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:49.076" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'O')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:49.075" endtime="20220630 11:19:49.076"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:49.111" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="ed964796-f54b-4714-8e01-719975bdbdae")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:49.076" endtime="20220630 11:19:49.111"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:49.112" level="INFO">Length is 3</msg>
<msg timestamp="20220630 11:19:49.112" level="INFO">${brand_list_length} = 3</msg>
<status status="PASS" starttime="20220630 11:19:49.112" endtime="20220630 11:19:49.112"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.141" level="INFO">${brand_name} = ONIKUMA</msg>
<status status="PASS" starttime="20220630 11:19:49.114" endtime="20220630 11:19:49.142"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.143" level="INFO">${upper_text} = ONIKUMA</msg>
<status status="PASS" starttime="20220630 11:19:49.142" endtime="20220630 11:19:49.143"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.143" endtime="20220630 11:19:49.144"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.113" endtime="20220630 11:19:49.144"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.162" level="INFO">${brand_name} = ORICO</msg>
<status status="PASS" starttime="20220630 11:19:49.145" endtime="20220630 11:19:49.162"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.162" level="INFO">${upper_text} = ORICO</msg>
<status status="PASS" starttime="20220630 11:19:49.162" endtime="20220630 11:19:49.162"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.163" endtime="20220630 11:19:49.163"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.144" endtime="20220630 11:19:49.163"/>
</iter>
<status status="PASS" starttime="20220630 11:19:49.113" endtime="20220630 11:19:49.163"/>
</for>
<status status="PASS" starttime="20220630 11:19:49.075" endtime="20220630 11:19:49.163"/>
</branch>
<status status="PASS" starttime="20220630 11:19:49.073" endtime="20220630 11:19:49.163"/>
</if>
<status status="PASS" starttime="20220630 11:19:49.071" endtime="20220630 11:19:49.163"/>
</kw>
<status status="PASS" starttime="20220630 11:19:48.935" endtime="20220630 11:19:49.163"/>
</iter>
<iter>
<var name="${index}">16</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:49.164" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][16]</msg>
<status status="PASS" starttime="20220630 11:19:49.164" endtime="20220630 11:19:49.164"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.193" level="INFO">${alphabet} = P</msg>
<status status="PASS" starttime="20220630 11:19:49.164" endtime="20220630 11:19:49.193"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.193" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][16]'.</msg>
<status status="PASS" starttime="20220630 11:19:49.193" endtime="20220630 11:19:49.284"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:49.285" level="INFO">${check_alphabet} = ['P']</msg>
<status status="PASS" starttime="20220630 11:19:49.285" endtime="20220630 11:19:49.286"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:49.286" level="INFO">${chars} = P</msg>
<status status="PASS" starttime="20220630 11:19:49.286" endtime="20220630 11:19:49.286"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:49.288" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'P')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:49.288" endtime="20220630 11:19:49.288"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:49.321" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="9876c35c-59a4-4829-ad41-7479d5bcbef1")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:49.288" endtime="20220630 11:19:49.321"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:49.322" level="INFO">Length is 8</msg>
<msg timestamp="20220630 11:19:49.323" level="INFO">${brand_list_length} = 8</msg>
<status status="PASS" starttime="20220630 11:19:49.322" endtime="20220630 11:19:49.323"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.352" level="INFO">${brand_name} = Pantum</msg>
<status status="PASS" starttime="20220630 11:19:49.324" endtime="20220630 11:19:49.352"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.353" level="INFO">${upper_text} = PANTUM</msg>
<status status="PASS" starttime="20220630 11:19:49.352" endtime="20220630 11:19:49.353"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.353" endtime="20220630 11:19:49.354"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.323" endtime="20220630 11:19:49.354"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.373" level="INFO">${brand_name} = Paperang</msg>
<status status="PASS" starttime="20220630 11:19:49.354" endtime="20220630 11:19:49.373"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.374" level="INFO">${upper_text} = PAPERANG</msg>
<status status="PASS" starttime="20220630 11:19:49.374" endtime="20220630 11:19:49.374"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.374" endtime="20220630 11:19:49.375"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.354" endtime="20220630 11:19:49.375"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.390" level="INFO">${brand_name} = Phanteks</msg>
<status status="PASS" starttime="20220630 11:19:49.375" endtime="20220630 11:19:49.391"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.391" level="INFO">${upper_text} = PHANTEKS</msg>
<status status="PASS" starttime="20220630 11:19:49.391" endtime="20220630 11:19:49.391"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.391" endtime="20220630 11:19:49.392"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.375" endtime="20220630 11:19:49.392"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.407" level="INFO">${brand_name} = Philips Digital</msg>
<status status="PASS" starttime="20220630 11:19:49.392" endtime="20220630 11:19:49.408"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.408" level="INFO">${upper_text} = PHILIPS DIGITAL</msg>
<status status="PASS" starttime="20220630 11:19:49.408" endtime="20220630 11:19:49.408"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.408" endtime="20220630 11:19:49.409"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.392" endtime="20220630 11:19:49.409"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.424" level="INFO">${brand_name} = Philips Monitor</msg>
<status status="PASS" starttime="20220630 11:19:49.409" endtime="20220630 11:19:49.424"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.425" level="INFO">${upper_text} = PHILIPS MONITOR</msg>
<status status="PASS" starttime="20220630 11:19:49.425" endtime="20220630 11:19:49.425"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.425" endtime="20220630 11:19:49.426"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.409" endtime="20220630 11:19:49.426"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.442" level="INFO">${brand_name} = Power ConneX</msg>
<status status="PASS" starttime="20220630 11:19:49.426" endtime="20220630 11:19:49.443"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.443" level="INFO">${upper_text} = POWER CONNEX</msg>
<status status="PASS" starttime="20220630 11:19:49.443" endtime="20220630 11:19:49.444"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.444" endtime="20220630 11:19:49.445"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.426" endtime="20220630 11:19:49.445"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.466" level="INFO">${brand_name} = Pro Gadgets</msg>
<status status="PASS" starttime="20220630 11:19:49.445" endtime="20220630 11:19:49.466"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.467" level="INFO">${upper_text} = PRO GADGETS</msg>
<status status="PASS" starttime="20220630 11:19:49.466" endtime="20220630 11:19:49.467"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.467" endtime="20220630 11:19:49.467"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.445" endtime="20220630 11:19:49.467"/>
</iter>
<status status="PASS" starttime="20220630 11:19:49.323" endtime="20220630 11:19:49.467"/>
</for>
<status status="PASS" starttime="20220630 11:19:49.287" endtime="20220630 11:19:49.467"/>
</branch>
<status status="PASS" starttime="20220630 11:19:49.286" endtime="20220630 11:19:49.467"/>
</if>
<status status="PASS" starttime="20220630 11:19:49.284" endtime="20220630 11:19:49.467"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.163" endtime="20220630 11:19:49.468"/>
</iter>
<iter>
<var name="${index}">17</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:49.468" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][17]</msg>
<status status="PASS" starttime="20220630 11:19:49.468" endtime="20220630 11:19:49.468"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.499" level="INFO">${alphabet} = Q</msg>
<status status="PASS" starttime="20220630 11:19:49.468" endtime="20220630 11:19:49.499"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.500" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][17]'.</msg>
<status status="PASS" starttime="20220630 11:19:49.499" endtime="20220630 11:19:49.590"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:49.592" level="INFO">${check_alphabet} = ['Q']</msg>
<status status="PASS" starttime="20220630 11:19:49.591" endtime="20220630 11:19:49.592"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:49.593" level="INFO">${chars} = Q</msg>
<status status="PASS" starttime="20220630 11:19:49.592" endtime="20220630 11:19:49.593"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:49.596" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'Q')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:49.595" endtime="20220630 11:19:49.596"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:49.634" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="fcde8b52-1ec2-4be0-a731-f53a6a5d4e8c")&gt;]</msg>
<status status="PASS" starttime="20220630 11:19:49.596" endtime="20220630 11:19:49.634"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:49.635" level="INFO">Length is 1</msg>
<msg timestamp="20220630 11:19:49.635" level="INFO">${brand_list_length} = 1</msg>
<status status="PASS" starttime="20220630 11:19:49.634" endtime="20220630 11:19:49.635"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}"/>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:49.636" endtime="20220630 11:19:49.636"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<status status="NOT RUN" starttime="20220630 11:19:49.636" endtime="20220630 11:19:49.636"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20220630 11:19:49.636" endtime="20220630 11:19:49.637"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:49.635" endtime="20220630 11:19:49.637"/>
</iter>
<status status="NOT RUN" starttime="20220630 11:19:49.635" endtime="20220630 11:19:49.637"/>
</for>
<status status="PASS" starttime="20220630 11:19:49.595" endtime="20220630 11:19:49.637"/>
</branch>
<status status="PASS" starttime="20220630 11:19:49.593" endtime="20220630 11:19:49.637"/>
</if>
<status status="PASS" starttime="20220630 11:19:49.590" endtime="20220630 11:19:49.637"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.468" endtime="20220630 11:19:49.638"/>
</iter>
<iter>
<var name="${index}">18</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:49.639" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][18]</msg>
<status status="PASS" starttime="20220630 11:19:49.638" endtime="20220630 11:19:49.639"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.691" level="INFO">${alphabet} = R</msg>
<status status="PASS" starttime="20220630 11:19:49.639" endtime="20220630 11:19:49.691"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.692" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][18]'.</msg>
<status status="PASS" starttime="20220630 11:19:49.691" endtime="20220630 11:19:49.795"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:49.797" level="INFO">${check_alphabet} = ['R']</msg>
<status status="PASS" starttime="20220630 11:19:49.797" endtime="20220630 11:19:49.797"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:49.798" level="INFO">${chars} = R</msg>
<status status="PASS" starttime="20220630 11:19:49.798" endtime="20220630 11:19:49.798"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:49.800" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'R')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:49.799" endtime="20220630 11:19:49.800"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:49.824" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="2e1328f7-2ada-4317-ab5d-f0294991eddd")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:49.800" endtime="20220630 11:19:49.824"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:49.824" level="INFO">Length is 5</msg>
<msg timestamp="20220630 11:19:49.825" level="INFO">${brand_list_length} = 5</msg>
<status status="PASS" starttime="20220630 11:19:49.824" endtime="20220630 11:19:49.825"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.848" level="INFO">${brand_name} = rapoo</msg>
<status status="PASS" starttime="20220630 11:19:49.825" endtime="20220630 11:19:49.848"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.849" level="INFO">${upper_text} = RAPOO</msg>
<status status="PASS" starttime="20220630 11:19:49.848" endtime="20220630 11:19:49.849"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.849" endtime="20220630 11:19:49.849"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.825" endtime="20220630 11:19:49.849"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.866" level="INFO">${brand_name} = Razer</msg>
<status status="PASS" starttime="20220630 11:19:49.850" endtime="20220630 11:19:49.866"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.867" level="INFO">${upper_text} = RAZER</msg>
<status status="PASS" starttime="20220630 11:19:49.867" endtime="20220630 11:19:49.867"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.867" endtime="20220630 11:19:49.868"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.850" endtime="20220630 11:19:49.868"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.884" level="INFO">${brand_name} = Rezeak</msg>
<status status="PASS" starttime="20220630 11:19:49.868" endtime="20220630 11:19:49.884"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.884" level="INFO">${upper_text} = REZEAK</msg>
<status status="PASS" starttime="20220630 11:19:49.884" endtime="20220630 11:19:49.884"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.885" endtime="20220630 11:19:49.885"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.868" endtime="20220630 11:19:49.885"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.901" level="INFO">${brand_name} = Ricoh</msg>
<status status="PASS" starttime="20220630 11:19:49.885" endtime="20220630 11:19:49.901"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:49.902" level="INFO">${upper_text} = RICOH</msg>
<status status="PASS" starttime="20220630 11:19:49.901" endtime="20220630 11:19:49.902"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:49.902" endtime="20220630 11:19:49.902"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.885" endtime="20220630 11:19:49.902"/>
</iter>
<status status="PASS" starttime="20220630 11:19:49.825" endtime="20220630 11:19:49.902"/>
</for>
<status status="PASS" starttime="20220630 11:19:49.799" endtime="20220630 11:19:49.903"/>
</branch>
<status status="PASS" starttime="20220630 11:19:49.798" endtime="20220630 11:19:49.903"/>
</if>
<status status="PASS" starttime="20220630 11:19:49.796" endtime="20220630 11:19:49.903"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.638" endtime="20220630 11:19:49.903"/>
</iter>
<iter>
<var name="${index}">19</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:49.904" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][19]</msg>
<status status="PASS" starttime="20220630 11:19:49.903" endtime="20220630 11:19:49.904"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.932" level="INFO">${alphabet} = S</msg>
<status status="PASS" starttime="20220630 11:19:49.904" endtime="20220630 11:19:49.932"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:49.933" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][19]'.</msg>
<status status="PASS" starttime="20220630 11:19:49.932" endtime="20220630 11:19:50.023"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:50.025" level="INFO">${check_alphabet} = ['S']</msg>
<status status="PASS" starttime="20220630 11:19:50.024" endtime="20220630 11:19:50.025"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:50.026" level="INFO">${chars} = S</msg>
<status status="PASS" starttime="20220630 11:19:50.025" endtime="20220630 11:19:50.026"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:50.028" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'S')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:50.028" endtime="20220630 11:19:50.028"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:50.061" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="98b4546a-35da-49fc-9a8f-ef1c4c89a2ee")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:50.029" endtime="20220630 11:19:50.061"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:50.062" level="INFO">Length is 11</msg>
<msg timestamp="20220630 11:19:50.062" level="INFO">${brand_list_length} = 11</msg>
<status status="PASS" starttime="20220630 11:19:50.062" endtime="20220630 11:19:50.062"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.092" level="INFO">${brand_name} = Sapphire</msg>
<status status="PASS" starttime="20220630 11:19:50.063" endtime="20220630 11:19:50.093"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.094" level="INFO">${upper_text} = SAPPHIRE</msg>
<status status="PASS" starttime="20220630 11:19:50.093" endtime="20220630 11:19:50.094"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.094" endtime="20220630 11:19:50.095"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.063" endtime="20220630 11:19:50.095"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.113" level="INFO">${brand_name} = SEAGATE</msg>
<status status="PASS" starttime="20220630 11:19:50.096" endtime="20220630 11:19:50.113"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.114" level="INFO">${upper_text} = SEAGATE</msg>
<status status="PASS" starttime="20220630 11:19:50.113" endtime="20220630 11:19:50.114"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.114" endtime="20220630 11:19:50.115"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.095" endtime="20220630 11:19:50.115"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.133" level="INFO">${brand_name} = Secret Lab</msg>
<status status="PASS" starttime="20220630 11:19:50.115" endtime="20220630 11:19:50.133"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.134" level="INFO">${upper_text} = SECRET LAB</msg>
<status status="PASS" starttime="20220630 11:19:50.133" endtime="20220630 11:19:50.134"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.134" endtime="20220630 11:19:50.134"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.115" endtime="20220630 11:19:50.134"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.154" level="INFO">${brand_name} = signoesport</msg>
<status status="PASS" starttime="20220630 11:19:50.135" endtime="20220630 11:19:50.154"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.155" level="INFO">${upper_text} = SIGNOESPORT</msg>
<status status="PASS" starttime="20220630 11:19:50.154" endtime="20220630 11:19:50.155"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.155" endtime="20220630 11:19:50.155"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.134" endtime="20220630 11:19:50.155"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.172" level="INFO">${brand_name} = Silverstone</msg>
<status status="PASS" starttime="20220630 11:19:50.156" endtime="20220630 11:19:50.172"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.172" level="INFO">${upper_text} = SILVERSTONE</msg>
<status status="PASS" starttime="20220630 11:19:50.172" endtime="20220630 11:19:50.172"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.173" endtime="20220630 11:19:50.173"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.155" endtime="20220630 11:19:50.173"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.189" level="INFO">${brand_name} = Speed Computer</msg>
<status status="PASS" starttime="20220630 11:19:50.173" endtime="20220630 11:19:50.189"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.190" level="INFO">${upper_text} = SPEED COMPUTER</msg>
<status status="PASS" starttime="20220630 11:19:50.189" endtime="20220630 11:19:50.190"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.190" endtime="20220630 11:19:50.190"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.173" endtime="20220630 11:19:50.190"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.206" level="INFO">${brand_name} = Steel Series</msg>
<status status="PASS" starttime="20220630 11:19:50.191" endtime="20220630 11:19:50.207"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.207" level="INFO">${upper_text} = STEEL SERIES</msg>
<status status="PASS" starttime="20220630 11:19:50.207" endtime="20220630 11:19:50.207"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.207" endtime="20220630 11:19:50.208"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.190" endtime="20220630 11:19:50.208"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.228" level="INFO">${brand_name} = STORM</msg>
<status status="PASS" starttime="20220630 11:19:50.209" endtime="20220630 11:19:50.228"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.229" level="INFO">${upper_text} = STORM</msg>
<status status="PASS" starttime="20220630 11:19:50.229" endtime="20220630 11:19:50.229"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.229" endtime="20220630 11:19:50.229"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.208" endtime="20220630 11:19:50.230"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.246" level="INFO">${brand_name} = SUNMI</msg>
<status status="PASS" starttime="20220630 11:19:50.230" endtime="20220630 11:19:50.246"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.247" level="INFO">${upper_text} = SUNMI</msg>
<status status="PASS" starttime="20220630 11:19:50.246" endtime="20220630 11:19:50.247"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.247" endtime="20220630 11:19:50.247"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.230" endtime="20220630 11:19:50.247"/>
</iter>
<iter>
<var name="${index}">10</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.263" level="INFO">${brand_name} = Synnex</msg>
<status status="PASS" starttime="20220630 11:19:50.248" endtime="20220630 11:19:50.263"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.264" level="INFO">${upper_text} = SYNNEX</msg>
<status status="PASS" starttime="20220630 11:19:50.263" endtime="20220630 11:19:50.264"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.264" endtime="20220630 11:19:50.264"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.247" endtime="20220630 11:19:50.264"/>
</iter>
<status status="PASS" starttime="20220630 11:19:50.062" endtime="20220630 11:19:50.264"/>
</for>
<status status="PASS" starttime="20220630 11:19:50.027" endtime="20220630 11:19:50.264"/>
</branch>
<status status="PASS" starttime="20220630 11:19:50.026" endtime="20220630 11:19:50.264"/>
</if>
<status status="PASS" starttime="20220630 11:19:50.024" endtime="20220630 11:19:50.265"/>
</kw>
<status status="PASS" starttime="20220630 11:19:49.903" endtime="20220630 11:19:50.265"/>
</iter>
<iter>
<var name="${index}">20</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:50.265" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][20]</msg>
<status status="PASS" starttime="20220630 11:19:50.265" endtime="20220630 11:19:50.265"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.294" level="INFO">${alphabet} = T</msg>
<status status="PASS" starttime="20220630 11:19:50.266" endtime="20220630 11:19:50.294"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.295" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][20]'.</msg>
<status status="PASS" starttime="20220630 11:19:50.294" endtime="20220630 11:19:50.383"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:50.385" level="INFO">${check_alphabet} = ['T']</msg>
<status status="PASS" starttime="20220630 11:19:50.385" endtime="20220630 11:19:50.386"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:50.386" level="INFO">${chars} = T</msg>
<status status="PASS" starttime="20220630 11:19:50.386" endtime="20220630 11:19:50.387"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:50.390" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'T')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:50.389" endtime="20220630 11:19:50.390"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:50.413" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="f6e141d0-19be-430d-affe-870ab9655f36")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:50.390" endtime="20220630 11:19:50.413"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:50.414" level="INFO">Length is 12</msg>
<msg timestamp="20220630 11:19:50.414" level="INFO">${brand_list_length} = 12</msg>
<status status="PASS" starttime="20220630 11:19:50.413" endtime="20220630 11:19:50.414"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.450" level="INFO">${brand_name} = Tenda</msg>
<status status="PASS" starttime="20220630 11:19:50.415" endtime="20220630 11:19:50.451"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.452" level="INFO">${upper_text} = TENDA</msg>
<status status="PASS" starttime="20220630 11:19:50.451" endtime="20220630 11:19:50.452"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.452" endtime="20220630 11:19:50.453"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.415" endtime="20220630 11:19:50.453"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.473" level="INFO">${brand_name} = The IT8</msg>
<status status="PASS" starttime="20220630 11:19:50.454" endtime="20220630 11:19:50.473"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.474" level="INFO">${upper_text} = THE IT8</msg>
<status status="PASS" starttime="20220630 11:19:50.474" endtime="20220630 11:19:50.474"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.474" endtime="20220630 11:19:50.475"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.453" endtime="20220630 11:19:50.475"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.501" level="INFO">${brand_name} = Thermaltake</msg>
<status status="PASS" starttime="20220630 11:19:50.475" endtime="20220630 11:19:50.501"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.502" level="INFO">${upper_text} = THERMALTAKE</msg>
<status status="PASS" starttime="20220630 11:19:50.501" endtime="20220630 11:19:50.502"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.502" endtime="20220630 11:19:50.503"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.475" endtime="20220630 11:19:50.503"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.533" level="INFO">${brand_name} = topvalue</msg>
<status status="PASS" starttime="20220630 11:19:50.503" endtime="20220630 11:19:50.533"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.534" level="INFO">${upper_text} = TOPVALUE</msg>
<status status="PASS" starttime="20220630 11:19:50.533" endtime="20220630 11:19:50.534"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.534" endtime="20220630 11:19:50.535"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.503" endtime="20220630 11:19:50.535"/>
</iter>
<iter>
<var name="${index}">5</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.560" level="INFO">${brand_name} = TOSHIBASTORAGE</msg>
<status status="PASS" starttime="20220630 11:19:50.536" endtime="20220630 11:19:50.560"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.561" level="INFO">${upper_text} = TOSHIBASTORAGE</msg>
<status status="PASS" starttime="20220630 11:19:50.561" endtime="20220630 11:19:50.561"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.562" endtime="20220630 11:19:50.562"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.535" endtime="20220630 11:19:50.562"/>
</iter>
<iter>
<var name="${index}">6</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.579" level="INFO">${brand_name} = Toshino</msg>
<status status="PASS" starttime="20220630 11:19:50.563" endtime="20220630 11:19:50.579"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.580" level="INFO">${upper_text} = TOSHINO</msg>
<status status="PASS" starttime="20220630 11:19:50.579" endtime="20220630 11:19:50.580"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.580" endtime="20220630 11:19:50.580"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.562" endtime="20220630 11:19:50.580"/>
</iter>
<iter>
<var name="${index}">7</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.597" level="INFO">${brand_name} = TP Link</msg>
<status status="PASS" starttime="20220630 11:19:50.581" endtime="20220630 11:19:50.597"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.598" level="INFO">${upper_text} = TP LINK</msg>
<status status="PASS" starttime="20220630 11:19:50.597" endtime="20220630 11:19:50.598"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.598" endtime="20220630 11:19:50.598"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.580" endtime="20220630 11:19:50.598"/>
</iter>
<iter>
<var name="${index}">8</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.617" level="INFO">${brand_name} = Transcend</msg>
<status status="PASS" starttime="20220630 11:19:50.599" endtime="20220630 11:19:50.617"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.618" level="INFO">${upper_text} = TRANSCEND</msg>
<status status="PASS" starttime="20220630 11:19:50.618" endtime="20220630 11:19:50.618"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.618" endtime="20220630 11:19:50.619"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.599" endtime="20220630 11:19:50.619"/>
</iter>
<iter>
<var name="${index}">9</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.635" level="INFO">${brand_name} = Trust</msg>
<status status="PASS" starttime="20220630 11:19:50.619" endtime="20220630 11:19:50.635"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.635" level="INFO">${upper_text} = TRUST</msg>
<status status="PASS" starttime="20220630 11:19:50.635" endtime="20220630 11:19:50.635"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.636" endtime="20220630 11:19:50.636"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.619" endtime="20220630 11:19:50.636"/>
</iter>
<iter>
<var name="${index}">10</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.653" level="INFO">${brand_name} = Tsunami</msg>
<status status="PASS" starttime="20220630 11:19:50.636" endtime="20220630 11:19:50.653"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.654" level="INFO">${upper_text} = TSUNAMI</msg>
<status status="PASS" starttime="20220630 11:19:50.653" endtime="20220630 11:19:50.654"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.654" endtime="20220630 11:19:50.654"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.636" endtime="20220630 11:19:50.654"/>
</iter>
<iter>
<var name="${index}">11</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.671" level="INFO">${brand_name} = Tt eSPORTS</msg>
<status status="PASS" starttime="20220630 11:19:50.655" endtime="20220630 11:19:50.671"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.671" level="INFO">${upper_text} = TT ESPORTS</msg>
<status status="PASS" starttime="20220630 11:19:50.671" endtime="20220630 11:19:50.671"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.671" endtime="20220630 11:19:50.672"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.654" endtime="20220630 11:19:50.672"/>
</iter>
<status status="PASS" starttime="20220630 11:19:50.414" endtime="20220630 11:19:50.672"/>
</for>
<status status="PASS" starttime="20220630 11:19:50.388" endtime="20220630 11:19:50.672"/>
</branch>
<status status="PASS" starttime="20220630 11:19:50.387" endtime="20220630 11:19:50.672"/>
</if>
<status status="PASS" starttime="20220630 11:19:50.384" endtime="20220630 11:19:50.672"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.265" endtime="20220630 11:19:50.672"/>
</iter>
<iter>
<var name="${index}">21</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:50.673" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][21]</msg>
<status status="PASS" starttime="20220630 11:19:50.673" endtime="20220630 11:19:50.673"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.703" level="INFO">${alphabet} = V</msg>
<status status="PASS" starttime="20220630 11:19:50.674" endtime="20220630 11:19:50.703"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.703" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][21]'.</msg>
<status status="PASS" starttime="20220630 11:19:50.703" endtime="20220630 11:19:50.793"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:50.794" level="INFO">${check_alphabet} = ['V']</msg>
<status status="PASS" starttime="20220630 11:19:50.794" endtime="20220630 11:19:50.794"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:50.795" level="INFO">${chars} = V</msg>
<status status="PASS" starttime="20220630 11:19:50.795" endtime="20220630 11:19:50.795"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:50.798" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'V')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:50.797" endtime="20220630 11:19:50.798"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:50.828" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="01333065-d391-4634-b48a-c8c74674c22e")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:50.799" endtime="20220630 11:19:50.828"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:50.829" level="INFO">Length is 5</msg>
<msg timestamp="20220630 11:19:50.829" level="INFO">${brand_list_length} = 5</msg>
<status status="PASS" starttime="20220630 11:19:50.828" endtime="20220630 11:19:50.829"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.861" level="INFO">${brand_name} = vention</msg>
<status status="PASS" starttime="20220630 11:19:50.830" endtime="20220630 11:19:50.861"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.862" level="INFO">${upper_text} = VENTION</msg>
<status status="PASS" starttime="20220630 11:19:50.861" endtime="20220630 11:19:50.862"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.862" endtime="20220630 11:19:50.863"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.830" endtime="20220630 11:19:50.863"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.886" level="INFO">${brand_name} = Vertex Official Store</msg>
<status status="PASS" starttime="20220630 11:19:50.864" endtime="20220630 11:19:50.886"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.887" level="INFO">${upper_text} = VERTEX OFFICIAL STORE</msg>
<status status="PASS" starttime="20220630 11:19:50.886" endtime="20220630 11:19:50.887"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.887" endtime="20220630 11:19:50.887"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.863" endtime="20220630 11:19:50.887"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.904" level="INFO">${brand_name} = ViewSonic</msg>
<status status="PASS" starttime="20220630 11:19:50.888" endtime="20220630 11:19:50.904"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.905" level="INFO">${upper_text} = VIEWSONIC</msg>
<status status="PASS" starttime="20220630 11:19:50.904" endtime="20220630 11:19:50.905"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.905" endtime="20220630 11:19:50.905"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.888" endtime="20220630 11:19:50.905"/>
</iter>
<iter>
<var name="${index}">4</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.925" level="INFO">${brand_name} = VOX</msg>
<status status="PASS" starttime="20220630 11:19:50.906" endtime="20220630 11:19:50.925"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:50.926" level="INFO">${upper_text} = VOX</msg>
<status status="PASS" starttime="20220630 11:19:50.925" endtime="20220630 11:19:50.926"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:50.926" endtime="20220630 11:19:50.927"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.905" endtime="20220630 11:19:50.927"/>
</iter>
<status status="PASS" starttime="20220630 11:19:50.829" endtime="20220630 11:19:50.927"/>
</for>
<status status="PASS" starttime="20220630 11:19:50.797" endtime="20220630 11:19:50.927"/>
</branch>
<status status="PASS" starttime="20220630 11:19:50.795" endtime="20220630 11:19:50.927"/>
</if>
<status status="PASS" starttime="20220630 11:19:50.793" endtime="20220630 11:19:50.927"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.672" endtime="20220630 11:19:50.927"/>
</iter>
<iter>
<var name="${index}">22</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:50.928" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][22]</msg>
<status status="PASS" starttime="20220630 11:19:50.928" endtime="20220630 11:19:50.928"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.963" level="INFO">${alphabet} = W</msg>
<status status="PASS" starttime="20220630 11:19:50.929" endtime="20220630 11:19:50.963"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:50.964" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][22]'.</msg>
<status status="PASS" starttime="20220630 11:19:50.963" endtime="20220630 11:19:51.064"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:51.066" level="INFO">${check_alphabet} = ['W']</msg>
<status status="PASS" starttime="20220630 11:19:51.065" endtime="20220630 11:19:51.066"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:51.067" level="INFO">${chars} = W</msg>
<status status="PASS" starttime="20220630 11:19:51.066" endtime="20220630 11:19:51.067"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.069" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'W')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:51.069" endtime="20220630 11:19:51.069"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:51.096" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="9a808e48-de5a-4028-a855-b877ae08b0f9")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:51.070" endtime="20220630 11:19:51.096"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:51.098" level="INFO">Length is 4</msg>
<msg timestamp="20220630 11:19:51.098" level="INFO">${brand_list_length} = 4</msg>
<status status="PASS" starttime="20220630 11:19:51.097" endtime="20220630 11:19:51.098"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.126" level="INFO">${brand_name} = Wavlink</msg>
<status status="PASS" starttime="20220630 11:19:51.099" endtime="20220630 11:19:51.126"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:51.126" level="INFO">${upper_text} = WAVLINK</msg>
<status status="PASS" starttime="20220630 11:19:51.126" endtime="20220630 11:19:51.126"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:51.127" endtime="20220630 11:19:51.127"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.098" endtime="20220630 11:19:51.127"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.150" level="INFO">${brand_name} = WD</msg>
<status status="PASS" starttime="20220630 11:19:51.127" endtime="20220630 11:19:51.150"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:51.150" level="INFO">${upper_text} = WD</msg>
<status status="PASS" starttime="20220630 11:19:51.150" endtime="20220630 11:19:51.150"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:51.150" endtime="20220630 11:19:51.150"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.127" endtime="20220630 11:19:51.150"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.168" level="INFO">${brand_name} = Winmax</msg>
<status status="PASS" starttime="20220630 11:19:51.151" endtime="20220630 11:19:51.168"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:51.169" level="INFO">${upper_text} = WINMAX</msg>
<status status="PASS" starttime="20220630 11:19:51.168" endtime="20220630 11:19:51.169"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:51.169" endtime="20220630 11:19:51.169"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.151" endtime="20220630 11:19:51.169"/>
</iter>
<status status="PASS" starttime="20220630 11:19:51.098" endtime="20220630 11:19:51.170"/>
</for>
<status status="PASS" starttime="20220630 11:19:51.069" endtime="20220630 11:19:51.170"/>
</branch>
<status status="PASS" starttime="20220630 11:19:51.068" endtime="20220630 11:19:51.170"/>
</if>
<status status="PASS" starttime="20220630 11:19:51.064" endtime="20220630 11:19:51.170"/>
</kw>
<status status="PASS" starttime="20220630 11:19:50.927" endtime="20220630 11:19:51.170"/>
</iter>
<iter>
<var name="${index}">23</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:51.171" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][23]</msg>
<status status="PASS" starttime="20220630 11:19:51.170" endtime="20220630 11:19:51.171"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.201" level="INFO">${alphabet} = X</msg>
<status status="PASS" starttime="20220630 11:19:51.171" endtime="20220630 11:19:51.201"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.202" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][23]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.202" endtime="20220630 11:19:51.294"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:51.295" level="INFO">${check_alphabet} = ['X']</msg>
<status status="PASS" starttime="20220630 11:19:51.295" endtime="20220630 11:19:51.296"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:51.296" level="INFO">${chars} = X</msg>
<status status="PASS" starttime="20220630 11:19:51.296" endtime="20220630 11:19:51.296"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.300" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'X')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:51.299" endtime="20220630 11:19:51.300"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:51.323" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="21b785c5-5b71-432f-b81e-97e868513bc2")&gt;]</msg>
<status status="PASS" starttime="20220630 11:19:51.301" endtime="20220630 11:19:51.323"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:51.324" level="INFO">Length is 1</msg>
<msg timestamp="20220630 11:19:51.324" level="INFO">${brand_list_length} = 1</msg>
<status status="PASS" starttime="20220630 11:19:51.323" endtime="20220630 11:19:51.324"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}"/>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.324" endtime="20220630 11:19:51.324"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.325" endtime="20220630 11:19:51.325"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.325" endtime="20220630 11:19:51.325"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:51.324" endtime="20220630 11:19:51.325"/>
</iter>
<status status="NOT RUN" starttime="20220630 11:19:51.324" endtime="20220630 11:19:51.325"/>
</for>
<status status="PASS" starttime="20220630 11:19:51.298" endtime="20220630 11:19:51.325"/>
</branch>
<status status="PASS" starttime="20220630 11:19:51.296" endtime="20220630 11:19:51.325"/>
</if>
<status status="PASS" starttime="20220630 11:19:51.294" endtime="20220630 11:19:51.325"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.170" endtime="20220630 11:19:51.325"/>
</iter>
<iter>
<var name="${index}">24</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:51.326" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][24]</msg>
<status status="PASS" starttime="20220630 11:19:51.326" endtime="20220630 11:19:51.326"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.356" level="INFO">${alphabet} = Y</msg>
<status status="PASS" starttime="20220630 11:19:51.327" endtime="20220630 11:19:51.356"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.357" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][24]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.357" endtime="20220630 11:19:51.456"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:51.457" level="INFO">${check_alphabet} = ['Y']</msg>
<status status="PASS" starttime="20220630 11:19:51.457" endtime="20220630 11:19:51.457"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:51.458" level="INFO">${chars} = Y</msg>
<status status="PASS" starttime="20220630 11:19:51.457" endtime="20220630 11:19:51.458"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.460" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'Y')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:51.459" endtime="20220630 11:19:51.460"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:51.475" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="47564f5c-7ca4-4cc4-b428-00d5731b130e")&gt;]</msg>
<status status="PASS" starttime="20220630 11:19:51.460" endtime="20220630 11:19:51.475"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:51.476" level="INFO">Length is 1</msg>
<msg timestamp="20220630 11:19:51.476" level="INFO">${brand_list_length} = 1</msg>
<status status="PASS" starttime="20220630 11:19:51.475" endtime="20220630 11:19:51.476"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}"/>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.476" endtime="20220630 11:19:51.476"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.476" endtime="20220630 11:19:51.477"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.477" endtime="20220630 11:19:51.477"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:51.476" endtime="20220630 11:19:51.477"/>
</iter>
<status status="NOT RUN" starttime="20220630 11:19:51.476" endtime="20220630 11:19:51.477"/>
</for>
<status status="PASS" starttime="20220630 11:19:51.459" endtime="20220630 11:19:51.477"/>
</branch>
<status status="PASS" starttime="20220630 11:19:51.458" endtime="20220630 11:19:51.477"/>
</if>
<status status="PASS" starttime="20220630 11:19:51.456" endtime="20220630 11:19:51.477"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.325" endtime="20220630 11:19:51.477"/>
</iter>
<iter>
<var name="${index}">25</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:51.478" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][25]</msg>
<status status="PASS" starttime="20220630 11:19:51.478" endtime="20220630 11:19:51.478"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.511" level="INFO">${alphabet} = Z</msg>
<status status="PASS" starttime="20220630 11:19:51.478" endtime="20220630 11:19:51.512"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.512" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][25]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.512" endtime="20220630 11:19:51.601"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:51.603" level="INFO">${check_alphabet} = ['Z']</msg>
<status status="PASS" starttime="20220630 11:19:51.603" endtime="20220630 11:19:51.603"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:51.604" level="INFO">${chars} = Z</msg>
<status status="PASS" starttime="20220630 11:19:51.603" endtime="20220630 11:19:51.604"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.606" level="INFO">${brand_name_locator} = xpath=//div[@class='official-shop-brand-list__section-name' and contains(text(), 'Z')]/following-sibling::div//div[@class='full-brand-list-item__brand-name']</msg>
<status status="PASS" starttime="20220630 11:19:51.605" endtime="20220630 11:19:51.606"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<msg timestamp="20220630 11:19:51.622" level="INFO">${brand_list_with_letters} = [&lt;selenium.webdriver.remote.webelement.WebElement (session="414399d602ed79fd721e8bae6ced36fc", element="3aa2a41a-7cbe-41a7-8522-3fcbcb0e43d8")&gt;, &lt;selenium.webdriver.remote.webelement.WebElement (sessi...</msg>
<status status="PASS" starttime="20220630 11:19:51.606" endtime="20220630 11:19:51.622"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20220630 11:19:51.622" level="INFO">Length is 4</msg>
<msg timestamp="20220630 11:19:51.622" level="INFO">${brand_list_length} = 4</msg>
<status status="PASS" starttime="20220630 11:19:51.622" endtime="20220630 11:19:51.622"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}">1</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.644" level="INFO">${brand_name} = ZOTAC</msg>
<status status="PASS" starttime="20220630 11:19:51.623" endtime="20220630 11:19:51.644"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:51.644" level="INFO">${upper_text} = ZOTAC</msg>
<status status="PASS" starttime="20220630 11:19:51.644" endtime="20220630 11:19:51.644"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:51.645" endtime="20220630 11:19:51.645"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.623" endtime="20220630 11:19:51.645"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.661" level="INFO">${brand_name} = zowie</msg>
<status status="PASS" starttime="20220630 11:19:51.645" endtime="20220630 11:19:51.661"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:51.662" level="INFO">${upper_text} = ZOWIE</msg>
<status status="PASS" starttime="20220630 11:19:51.661" endtime="20220630 11:19:51.662"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:51.662" endtime="20220630 11:19:51.662"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.645" endtime="20220630 11:19:51.662"/>
</iter>
<iter>
<var name="${index}">3</var>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.679" level="INFO">${brand_name} = ZYXEL</msg>
<status status="PASS" starttime="20220630 11:19:51.663" endtime="20220630 11:19:51.679"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<msg timestamp="20220630 11:19:51.680" level="INFO">${upper_text} = ZYXEL</msg>
<status status="PASS" starttime="20220630 11:19:51.679" endtime="20220630 11:19:51.680"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20220630 11:19:51.680" endtime="20220630 11:19:51.680"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.662" endtime="20220630 11:19:51.681"/>
</iter>
<status status="PASS" starttime="20220630 11:19:51.622" endtime="20220630 11:19:51.681"/>
</for>
<status status="PASS" starttime="20220630 11:19:51.605" endtime="20220630 11:19:51.681"/>
</branch>
<status status="PASS" starttime="20220630 11:19:51.604" endtime="20220630 11:19:51.681"/>
</if>
<status status="PASS" starttime="20220630 11:19:51.602" endtime="20220630 11:19:51.681"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.477" endtime="20220630 11:19:51.681"/>
</iter>
<iter>
<var name="${index}">26</var>
<kw name="Catenate" library="BuiltIn">
<var>${path}</var>
<arg>SEPARATOR=</arg>
<arg>${alphabet_locator}</arg>
<arg>[${index}]</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20220630 11:19:51.682" level="INFO">${path} = xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][26]</msg>
<status status="PASS" starttime="20220630 11:19:51.682" endtime="20220630 11:19:51.682"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${alphabet}</var>
<arg>${path}</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.713" level="INFO">${alphabet} = #</msg>
<status status="PASS" starttime="20220630 11:19:51.683" endtime="20220630 11:19:51.713"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>${path}</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20220630 11:19:51.713" level="INFO">Clicking element 'xpath=//div[@class='official-shop-brand-list__alphabet-list']//div[not(contains(@class,'official-shop-brand-list__alphabet-letter--disabled'))][26]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.713" endtime="20220630 11:19:51.806"/>
</kw>
<kw name="Verify each result show the correct first letter same the alphabet A-Z" library="search_with_alphabet">
<arg>${alphabet}</arg>
<kw name="Get Regexp Matches" library="String">
<var>${check_alphabet}</var>
<arg>${alphabet}</arg>
<arg>[A-Z]+</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20220630 11:19:51.809" level="INFO">${check_alphabet} = []</msg>
<status status="PASS" starttime="20220630 11:19:51.808" endtime="20220630 11:19:51.809"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${chars}</var>
<arg>@{check_alphabet}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220630 11:19:51.810" level="INFO">${chars} = </msg>
<status status="PASS" starttime="20220630 11:19:51.810" endtime="20220630 11:19:51.810"/>
</kw>
<if>
<branch type="IF" condition="'${chars}'!='${EMPTY}'">
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_locator}</arg>
<arg>alphabet</arg>
<arg>${chars}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.812" endtime="20220630 11:19:51.812"/>
</kw>
<kw name="Get WebElements" library="SeleniumLibrary">
<var>${brand_list_with_letters}</var>
<arg>${brand_name_locator}</arg>
<doc>Returns a list of WebElement objects matching the ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.813" endtime="20220630 11:19:51.813"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${brand_list_length}</var>
<arg>${brand_list_with_letters}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.813" endtime="20220630 11:19:51.813"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>1</value>
<value>${brand_list_length}</value>
<iter>
<var name="${index}"/>
<kw name="Get Text" library="SeleniumLibrary">
<var>${brand_name}</var>
<arg>${brand_list_with_letters}[${index}]</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.813" endtime="20220630 11:19:51.813"/>
</kw>
<kw name="Convert To Upper Case" library="String">
<var>${upper_text}</var>
<arg>${brand_name}</arg>
<doc>Converts string to upper case.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.813" endtime="20220630 11:19:51.814"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${upper_text}</arg>
<arg>\^${chars}</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.814" endtime="20220630 11:19:51.814"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:51.813" endtime="20220630 11:19:51.814"/>
</iter>
<status status="NOT RUN" starttime="20220630 11:19:51.813" endtime="20220630 11:19:51.814"/>
</for>
<status status="NOT RUN" starttime="20220630 11:19:51.812" endtime="20220630 11:19:51.814"/>
</branch>
<status status="PASS" starttime="20220630 11:19:51.810" endtime="20220630 11:19:51.814"/>
</if>
<status status="PASS" starttime="20220630 11:19:51.807" endtime="20220630 11:19:51.814"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.681" endtime="20220630 11:19:51.814"/>
</iter>
<status status="PASS" starttime="20220630 11:19:44.125" endtime="20220630 11:19:51.814"/>
</for>
<status status="PASS" starttime="20220630 11:19:43.570" endtime="20220630 11:19:51.814"/>
</kw>
<kw name="Verify the search result contain the same link and company name as computer product page" library="search_with_alphabet">
<kw name="Get dictionary from file" library="common">
<var>${brand_dict_title}</var>
<var>${brand_key_url}</var>
<arg>${data_path}</arg>
<arg>Computer_categories</arg>
<kw name="Read data from file" library="common">
<var>${data}</var>
<arg>${path}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>OperatingSystem.File should exist</arg>
<arg>${path}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${path}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20220630 11:19:51.819" level="INFO" html="true">File '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20220630 11:19:51.818" endtime="20220630 11:19:51.819"/>
</kw>
<msg timestamp="20220630 11:19:51.819" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20220630 11:19:51.817" endtime="20220630 11:19:51.819"/>
</kw>
<if>
<branch type="IF" condition="'${status}'=='True'">
<kw name="Get File" library="OperatingSystem">
<var>${data_file}</var>
<arg>${path}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220630 11:19:51.820" level="INFO" html="true">Getting file '&lt;a href="file://D:\Assignment\web5_assignment\keywords\utils\data.yaml"&gt;D:\Assignment\web5_assignment\keywords\utils\data.yaml&lt;/a&gt;'.</msg>
<msg timestamp="20220630 11:19:51.820" level="INFO">${data_file} = categories:
  - Men Clothes
  - Mobile &amp; Gadgets
  - Health &amp; Wellness
  - Watches &amp; Glasses
  - Men Shoes
  - Computers &amp; Laptops
  - Cameras
  - Sports &amp; Outdoors
  - Home Entertainment 
  - Gaming ...</msg>
<status status="PASS" starttime="20220630 11:19:51.820" endtime="20220630 11:19:51.820"/>
</kw>
<kw name="Safe Load" library="yaml">
<var>${data}</var>
<arg>${data_file}</arg>
<doc>Parse the first YAML document in a stream
and produce the corresponding Python object.</doc>
<msg timestamp="20220630 11:19:51.829" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:51.821" endtime="20220630 11:19:51.829"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.819" endtime="20220630 11:19:51.829"/>
</branch>
<branch type="ELSE">
<kw name="Log To Console" library="BuiltIn">
<arg>Not found file at ${path}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20220630 11:19:51.830" endtime="20220630 11:19:51.830"/>
</kw>
<status status="NOT RUN" starttime="20220630 11:19:51.829" endtime="20220630 11:19:51.830"/>
</branch>
<status status="PASS" starttime="20220630 11:19:51.819" endtime="20220630 11:19:51.830"/>
</if>
<msg timestamp="20220630 11:19:51.830" level="INFO">${data} = {'categories': ['Men Clothes', 'Mobile &amp; Gadgets', 'Health &amp; Wellness', 'Watches &amp; Glasses', 'Men Shoes', 'Computers &amp; Laptops', 'Cameras', 'Sports &amp; Outdoors', 'Home Entertainment', 'Gaming &amp; Hobbies...</msg>
<status status="PASS" starttime="20220630 11:19:51.816" endtime="20220630 11:19:51.831"/>
</kw>
<kw name="Copy Dictionary" library="Collections">
<var>${dict}</var>
<arg>${data}[${keyword}]</arg>
<doc>Returns a copy of the given dictionary.</doc>
<msg timestamp="20220630 11:19:51.831" level="INFO">${dict} = {'itcity': 'IT City', 'microsoft': 'Microsoft', 'seagate': 'SEAGATE', 'advice': 'Advice', 'asus': 'ASUS', 'razer': 'Razer', 'hp': 'HP', 'steelseries': 'Steel Series', 'logi': 'logitech', 'lenovo': 'Le...</msg>
<status status="PASS" starttime="20220630 11:19:51.831" endtime="20220630 11:19:51.831"/>
</kw>
<kw name="Get Dictionary Keys" library="Collections">
<var>${key}</var>
<arg>${dict}</arg>
<arg>sort_keys=False</arg>
<doc>Returns keys of the given ``dictionary`` as a list.</doc>
<msg timestamp="20220630 11:19:51.832" level="INFO">${key} = ['itcity', 'microsoft', 'seagate', 'advice', 'asus', 'razer', 'hp', 'steelseries', 'logi', 'lenovo', 'huawei', 'tplink']</msg>
<status status="PASS" starttime="20220630 11:19:51.831" endtime="20220630 11:19:51.832"/>
</kw>
<msg timestamp="20220630 11:19:51.832" level="INFO">${brand_dict_title} = {'itcity': 'IT City', 'microsoft': 'Microsoft', 'seagate': 'SEAGATE', 'advice': 'Advice', 'asus': 'ASUS', 'razer': 'Razer', 'hp': 'HP', 'steelseries': 'Steel Series', 'logi': 'logitech', 'lenovo': 'Le...</msg>
<msg timestamp="20220630 11:19:51.832" level="INFO">${brand_key_url} = ['itcity', 'microsoft', 'seagate', 'advice', 'asus', 'razer', 'hp', 'steelseries', 'logi', 'lenovo', 'huawei', 'tplink']</msg>
<status status="PASS" starttime="20220630 11:19:51.815" endtime="20220630 11:19:51.833"/>
</kw>
<kw name="Get Dictionary Values" library="Collections">
<var>${brand_name_list}</var>
<arg>${brand_dict_title}</arg>
<doc>Returns values of the given ``dictionary`` as a list.</doc>
<msg timestamp="20220630 11:19:51.833" level="INFO">${brand_name_list} = ['Advice', 'ASUS', 'HP', 'Huawei', 'IT City', 'Lenovo', 'logitech', 'Microsoft', 'Razer', 'SEAGATE', 'Steel Series', 'TP Link']</msg>
<status status="PASS" starttime="20220630 11:19:51.833" endtime="20220630 11:19:51.834"/>
</kw>
<for flavor="IN">
<var>${url}</var>
<value>@{brand_key_url}</value>
<iter>
<var name="${url}">itcity</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.835" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'itcity')]</msg>
<status status="PASS" starttime="20220630 11:19:51.834" endtime="20220630 11:19:51.835"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:51.849" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'itcity')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.835" endtime="20220630 11:19:51.849"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.834" endtime="20220630 11:19:51.849"/>
</iter>
<iter>
<var name="${url}">microsoft</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.850" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'microsoft')]</msg>
<status status="PASS" starttime="20220630 11:19:51.849" endtime="20220630 11:19:51.850"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:51.863" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'microsoft')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.850" endtime="20220630 11:19:51.863"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.849" endtime="20220630 11:19:51.863"/>
</iter>
<iter>
<var name="${url}">seagate</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.864" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'seagate')]</msg>
<status status="PASS" starttime="20220630 11:19:51.863" endtime="20220630 11:19:51.864"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:51.877" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'seagate')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.864" endtime="20220630 11:19:51.877"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.863" endtime="20220630 11:19:51.877"/>
</iter>
<iter>
<var name="${url}">advice</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.878" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'advice')]</msg>
<status status="PASS" starttime="20220630 11:19:51.877" endtime="20220630 11:19:51.878"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:51.891" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'advice')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.878" endtime="20220630 11:19:51.891"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.877" endtime="20220630 11:19:51.891"/>
</iter>
<iter>
<var name="${url}">asus</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.892" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'asus')]</msg>
<status status="PASS" starttime="20220630 11:19:51.892" endtime="20220630 11:19:51.892"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:51.905" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'asus')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.893" endtime="20220630 11:19:51.906"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.892" endtime="20220630 11:19:51.906"/>
</iter>
<iter>
<var name="${url}">razer</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.907" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'razer')]</msg>
<status status="PASS" starttime="20220630 11:19:51.906" endtime="20220630 11:19:51.907"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:51.920" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'razer')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.907" endtime="20220630 11:19:51.920"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.906" endtime="20220630 11:19:51.920"/>
</iter>
<iter>
<var name="${url}">hp</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.921" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'hp')]</msg>
<status status="PASS" starttime="20220630 11:19:51.920" endtime="20220630 11:19:51.921"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:51.935" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'hp')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.921" endtime="20220630 11:19:51.935"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.920" endtime="20220630 11:19:51.935"/>
</iter>
<iter>
<var name="${url}">steelseries</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.936" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'steelseries')]</msg>
<status status="PASS" starttime="20220630 11:19:51.935" endtime="20220630 11:19:51.936"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:51.949" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'steelseries')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.936" endtime="20220630 11:19:51.949"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.935" endtime="20220630 11:19:51.949"/>
</iter>
<iter>
<var name="${url}">logi</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.950" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'logi')]</msg>
<status status="PASS" starttime="20220630 11:19:51.950" endtime="20220630 11:19:51.950"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:51.963" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'logi')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.950" endtime="20220630 11:19:51.963"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.950" endtime="20220630 11:19:51.963"/>
</iter>
<iter>
<var name="${url}">lenovo</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.964" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'lenovo')]</msg>
<status status="PASS" starttime="20220630 11:19:51.964" endtime="20220630 11:19:51.964"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:51.981" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'lenovo')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.964" endtime="20220630 11:19:51.981"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.963" endtime="20220630 11:19:51.981"/>
</iter>
<iter>
<var name="${url}">huawei</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.982" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'huawei')]</msg>
<status status="PASS" starttime="20220630 11:19:51.981" endtime="20220630 11:19:51.982"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:51.995" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'huawei')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.982" endtime="20220630 11:19:51.995"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.981" endtime="20220630 11:19:51.995"/>
</iter>
<iter>
<var name="${url}">tplink</var>
<kw name="Replace String" library="String">
<var>${brand_name_locator}</var>
<arg>${brand_name_url_locator}</arg>
<arg>url</arg>
<arg>${url}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20220630 11:19:51.996" level="INFO">${brand_name_locator} = xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'tplink')]</msg>
<status status="PASS" starttime="20220630 11:19:51.995" endtime="20220630 11:19:51.996"/>
</kw>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<arg>${brand_name_locator}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<msg timestamp="20220630 11:19:52.012" level="INFO">Current page contains element 'xpath=//a[@class='full-brand-list-item__brand-cover-image'  and contains(@href,'tplink')]'.</msg>
<status status="PASS" starttime="20220630 11:19:51.996" endtime="20220630 11:19:52.012"/>
</kw>
<status status="PASS" starttime="20220630 11:19:51.995" endtime="20220630 11:19:52.012"/>
</iter>
<status status="PASS" starttime="20220630 11:19:51.834" endtime="20220630 11:19:52.012"/>
</for>
<for flavor="IN">
<var>${name}</var>
<value>@{brand_name_list}</value>
<iter>
<var name="${name}">Advice</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.037" level="INFO">Current page contains text 'Advice'.</msg>
<status status="PASS" starttime="20220630 11:19:52.013" endtime="20220630 11:19:52.037"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.012" endtime="20220630 11:19:52.037"/>
</iter>
<iter>
<var name="${name}">ASUS</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.057" level="INFO">Current page contains text 'ASUS'.</msg>
<status status="PASS" starttime="20220630 11:19:52.037" endtime="20220630 11:19:52.057"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.037" endtime="20220630 11:19:52.057"/>
</iter>
<iter>
<var name="${name}">HP</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.079" level="INFO">Current page contains text 'HP'.</msg>
<status status="PASS" starttime="20220630 11:19:52.057" endtime="20220630 11:19:52.079"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.057" endtime="20220630 11:19:52.079"/>
</iter>
<iter>
<var name="${name}">Huawei</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.105" level="INFO">Current page contains text 'Huawei'.</msg>
<status status="PASS" starttime="20220630 11:19:52.080" endtime="20220630 11:19:52.105"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.079" endtime="20220630 11:19:52.105"/>
</iter>
<iter>
<var name="${name}">IT City</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.127" level="INFO">Current page contains text 'IT City'.</msg>
<status status="PASS" starttime="20220630 11:19:52.105" endtime="20220630 11:19:52.127"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.105" endtime="20220630 11:19:52.127"/>
</iter>
<iter>
<var name="${name}">Lenovo</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.147" level="INFO">Current page contains text 'Lenovo'.</msg>
<status status="PASS" starttime="20220630 11:19:52.127" endtime="20220630 11:19:52.147"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.127" endtime="20220630 11:19:52.148"/>
</iter>
<iter>
<var name="${name}">logitech</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.167" level="INFO">Current page contains text 'logitech'.</msg>
<status status="PASS" starttime="20220630 11:19:52.148" endtime="20220630 11:19:52.167"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.148" endtime="20220630 11:19:52.167"/>
</iter>
<iter>
<var name="${name}">Microsoft</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.189" level="INFO">Current page contains text 'Microsoft'.</msg>
<status status="PASS" starttime="20220630 11:19:52.168" endtime="20220630 11:19:52.189"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.167" endtime="20220630 11:19:52.190"/>
</iter>
<iter>
<var name="${name}">Razer</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.212" level="INFO">Current page contains text 'Razer'.</msg>
<status status="PASS" starttime="20220630 11:19:52.190" endtime="20220630 11:19:52.212"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.190" endtime="20220630 11:19:52.212"/>
</iter>
<iter>
<var name="${name}">SEAGATE</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.232" level="INFO">Current page contains text 'SEAGATE'.</msg>
<status status="PASS" starttime="20220630 11:19:52.213" endtime="20220630 11:19:52.232"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.213" endtime="20220630 11:19:52.232"/>
</iter>
<iter>
<var name="${name}">Steel Series</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.250" level="INFO">Current page contains text 'Steel Series'.</msg>
<status status="PASS" starttime="20220630 11:19:52.232" endtime="20220630 11:19:52.252"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.232" endtime="20220630 11:19:52.252"/>
</iter>
<iter>
<var name="${name}">TP Link</var>
<kw name="Page Should Contain" library="SeleniumLibrary">
<arg>${name}</arg>
<doc>Verifies that current page contains ``text``.</doc>
<msg timestamp="20220630 11:19:52.271" level="INFO">Current page contains text 'TP Link'.</msg>
<status status="PASS" starttime="20220630 11:19:52.252" endtime="20220630 11:19:52.271"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.252" endtime="20220630 11:19:52.271"/>
</iter>
<status status="PASS" starttime="20220630 11:19:52.012" endtime="20220630 11:19:52.272"/>
</for>
<status status="PASS" starttime="20220630 11:19:51.815" endtime="20220630 11:19:52.272"/>
</kw>
<status status="PASS" starttime="20220630 11:19:43.569" endtime="20220630 11:19:52.272"/>
</kw>
<kw name="Close browser window" library="common" type="TEARDOWN">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20220630 11:19:52.273" endtime="20220630 11:19:54.825"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>Test Completed</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20220630 11:19:54.826" endtime="20220630 11:19:54.828"/>
</kw>
<status status="PASS" starttime="20220630 11:19:52.273" endtime="20220630 11:19:54.828"/>
</kw>
<status status="FAIL" starttime="20220630 11:19:15.309" endtime="20220630 11:19:54.830">InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //div[contains(@class,'shopee-search-item-result__item')]/div[3]/a[contains(@href='เมาส์ไร้สาย MI')] because of the following error:
SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[contains(@class,'shopee-search-item-result__item')]/div[3]/a[contains(@href='เมาส์ไร้สาย MI')]' is not a valid XPath expression.
  (Session info: chrome=102.0.5005.115)
</status>
</test>
<doc>Test to verify that home page should has all categories following list
and when enter computer categories, page should has all categories and
when enter any topics in computer page like 'IT CITY', it must verify that
the page redirect to that topic correctly. At computer page, robot can
sort result following argument 'Popular, Lastest, Top Sales and Price from low to high'.
When sort by price, it should verify that third product has wireless mouse MI but
if the search result not found wireless mouse, the script should show fail result but
continue process until the end of script.At computer page, when robot click see all,
the browser will redirect to search page by name from A-Z, it should verify that
the first letter of brand name in search result same alphabet as robot click [A-Z]</doc>
<status status="FAIL" starttime="20220630 11:19:14.801" endtime="20220630 11:19:54.836"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Shoppee">Shoppee</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
